ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"system_stm32l4xx.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.SystemInit,"ax",%progbits
  18              		.align	1
  19              		.global	SystemInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	SystemInit:
  26              	.LFB132:
  27              		.file 1 "Core/Src/system_stm32l4xx.c"
   1:Core/Src/system_stm32l4xx.c **** /**
   2:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
   3:Core/Src/system_stm32l4xx.c ****   * @file    system_stm32l4xx.c
   4:Core/Src/system_stm32l4xx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32l4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32l4xx.c ****   *
   7:Core/Src/system_stm32l4xx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32l4xx.c ****   *   user application:
   9:Core/Src/system_stm32l4xx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32l4xx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32l4xx.c ****   *                      the "startup_stm32l4xx.s" file.
  12:Core/Src/system_stm32l4xx.c ****   *
  13:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32l4xx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32l4xx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32l4xx.c ****   *
  17:Core/Src/system_stm32l4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32l4xx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32l4xx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32l4xx.c ****   *
  21:Core/Src/system_stm32l4xx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32l4xx.c ****   *   Then SystemInit() function is called, in "startup_stm32l4xx.s" file, to
  23:Core/Src/system_stm32l4xx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32l4xx.c ****   *
  25:Core/Src/system_stm32l4xx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  27:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32l4xx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32l4xx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 2


  32:Core/Src/system_stm32l4xx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32l4xx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32l4xx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32l4xx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32l4xx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32l4xx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32l4xx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32l4xx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32l4xx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32l4xx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_P                              | NA
  57:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  58:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_Q                              | NA
  59:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  60:Core/Src/system_stm32l4xx.c ****   *        PLLSAI2_R                              | NA
  61:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  62:Core/Src/system_stm32l4xx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  63:Core/Src/system_stm32l4xx.c ****   *        SDIO and RNG clock                     |
  64:Core/Src/system_stm32l4xx.c ****   *-----------------------------------------------------------------------------
  65:Core/Src/system_stm32l4xx.c ****   *=============================================================================
  66:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  67:Core/Src/system_stm32l4xx.c ****   * @attention
  68:Core/Src/system_stm32l4xx.c ****   *
  69:Core/Src/system_stm32l4xx.c ****   * Copyright (c) 2017 STMicroelectronics.
  70:Core/Src/system_stm32l4xx.c ****   * All rights reserved.
  71:Core/Src/system_stm32l4xx.c ****   *
  72:Core/Src/system_stm32l4xx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  73:Core/Src/system_stm32l4xx.c ****   * in the root directory of this software component.
  74:Core/Src/system_stm32l4xx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  75:Core/Src/system_stm32l4xx.c ****   *
  76:Core/Src/system_stm32l4xx.c ****   ******************************************************************************
  77:Core/Src/system_stm32l4xx.c ****   */
  78:Core/Src/system_stm32l4xx.c **** 
  79:Core/Src/system_stm32l4xx.c **** /** @addtogroup CMSIS
  80:Core/Src/system_stm32l4xx.c ****   * @{
  81:Core/Src/system_stm32l4xx.c ****   */
  82:Core/Src/system_stm32l4xx.c **** 
  83:Core/Src/system_stm32l4xx.c **** /** @addtogroup stm32l4xx_system
  84:Core/Src/system_stm32l4xx.c ****   * @{
  85:Core/Src/system_stm32l4xx.c ****   */
  86:Core/Src/system_stm32l4xx.c **** 
  87:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Includes
  88:Core/Src/system_stm32l4xx.c ****   * @{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 3


  89:Core/Src/system_stm32l4xx.c ****   */
  90:Core/Src/system_stm32l4xx.c **** 
  91:Core/Src/system_stm32l4xx.c **** #include "stm32l4xx.h"
  92:Core/Src/system_stm32l4xx.c **** 
  93:Core/Src/system_stm32l4xx.c **** /**
  94:Core/Src/system_stm32l4xx.c ****   * @}
  95:Core/Src/system_stm32l4xx.c ****   */
  96:Core/Src/system_stm32l4xx.c **** 
  97:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_TypesDefinitions
  98:Core/Src/system_stm32l4xx.c ****   * @{
  99:Core/Src/system_stm32l4xx.c ****   */
 100:Core/Src/system_stm32l4xx.c **** 
 101:Core/Src/system_stm32l4xx.c **** /**
 102:Core/Src/system_stm32l4xx.c ****   * @}
 103:Core/Src/system_stm32l4xx.c ****   */
 104:Core/Src/system_stm32l4xx.c **** 
 105:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Defines
 106:Core/Src/system_stm32l4xx.c ****   * @{
 107:Core/Src/system_stm32l4xx.c ****   */
 108:Core/Src/system_stm32l4xx.c **** 
 109:Core/Src/system_stm32l4xx.c **** #if !defined  (HSE_VALUE)
 110:Core/Src/system_stm32l4xx.c ****   #define HSE_VALUE    8000000U  /*!< Value of the External oscillator in Hz */
 111:Core/Src/system_stm32l4xx.c **** #endif /* HSE_VALUE */
 112:Core/Src/system_stm32l4xx.c **** 
 113:Core/Src/system_stm32l4xx.c **** #if !defined  (MSI_VALUE)
 114:Core/Src/system_stm32l4xx.c ****   #define MSI_VALUE    4000000U  /*!< Value of the Internal oscillator in Hz*/
 115:Core/Src/system_stm32l4xx.c **** #endif /* MSI_VALUE */
 116:Core/Src/system_stm32l4xx.c **** 
 117:Core/Src/system_stm32l4xx.c **** #if !defined  (HSI_VALUE)
 118:Core/Src/system_stm32l4xx.c ****   #define HSI_VALUE    16000000U /*!< Value of the Internal oscillator in Hz*/
 119:Core/Src/system_stm32l4xx.c **** #endif /* HSI_VALUE */
 120:Core/Src/system_stm32l4xx.c **** 
 121:Core/Src/system_stm32l4xx.c **** /* Note: Following vector table addresses must be defined in line with linker
 122:Core/Src/system_stm32l4xx.c ****          configuration. */
 123:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate the vector table
 124:Core/Src/system_stm32l4xx.c ****      anywhere in Flash or Sram, else the vector table is kept at the automatic
 125:Core/Src/system_stm32l4xx.c ****      remap of boot address selected */
 126:Core/Src/system_stm32l4xx.c **** /* #define USER_VECT_TAB_ADDRESS */
 127:Core/Src/system_stm32l4xx.c **** 
 128:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 129:Core/Src/system_stm32l4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table
 130:Core/Src/system_stm32l4xx.c ****      in Sram else user remap will be done in Flash. */
 131:Core/Src/system_stm32l4xx.c **** /* #define VECT_TAB_SRAM */
 132:Core/Src/system_stm32l4xx.c **** 
 133:Core/Src/system_stm32l4xx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32l4xx.c **** #else
 139:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32l4xx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32l4xx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32l4xx.c **** #endif /* VECT_TAB_SRAM */
 144:Core/Src/system_stm32l4xx.c **** #endif /* USER_VECT_TAB_ADDRESS */
 145:Core/Src/system_stm32l4xx.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 4


 146:Core/Src/system_stm32l4xx.c **** /******************************************************************************/
 147:Core/Src/system_stm32l4xx.c **** /**
 148:Core/Src/system_stm32l4xx.c ****   * @}
 149:Core/Src/system_stm32l4xx.c ****   */
 150:Core/Src/system_stm32l4xx.c **** 
 151:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Macros
 152:Core/Src/system_stm32l4xx.c ****   * @{
 153:Core/Src/system_stm32l4xx.c ****   */
 154:Core/Src/system_stm32l4xx.c **** 
 155:Core/Src/system_stm32l4xx.c **** /**
 156:Core/Src/system_stm32l4xx.c ****   * @}
 157:Core/Src/system_stm32l4xx.c ****   */
 158:Core/Src/system_stm32l4xx.c **** 
 159:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Variables
 160:Core/Src/system_stm32l4xx.c ****   * @{
 161:Core/Src/system_stm32l4xx.c ****   */
 162:Core/Src/system_stm32l4xx.c ****   /* The SystemCoreClock variable is updated in three ways:
 163:Core/Src/system_stm32l4xx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 164:Core/Src/system_stm32l4xx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 165:Core/Src/system_stm32l4xx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 166:Core/Src/system_stm32l4xx.c ****          Note: If you use this function to configure the system clock; then there
 167:Core/Src/system_stm32l4xx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 168:Core/Src/system_stm32l4xx.c ****                variable is updated automatically.
 169:Core/Src/system_stm32l4xx.c ****   */
 170:Core/Src/system_stm32l4xx.c ****   uint32_t SystemCoreClock = 4000000U;
 171:Core/Src/system_stm32l4xx.c **** 
 172:Core/Src/system_stm32l4xx.c ****   const uint8_t  AHBPrescTable[16] = {0U, 0U, 0U, 0U, 0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U, 6U, 7U, 8U, 9
 173:Core/Src/system_stm32l4xx.c ****   const uint8_t  APBPrescTable[8] =  {0U, 0U, 0U, 0U, 1U, 2U, 3U, 4U};
 174:Core/Src/system_stm32l4xx.c ****   const uint32_t MSIRangeTable[12] = {100000U,   200000U,   400000U,   800000U,  1000000U,  2000000
 175:Core/Src/system_stm32l4xx.c ****                                       4000000U, 8000000U, 16000000U, 24000000U, 32000000U, 48000000
 176:Core/Src/system_stm32l4xx.c **** /**
 177:Core/Src/system_stm32l4xx.c ****   * @}
 178:Core/Src/system_stm32l4xx.c ****   */
 179:Core/Src/system_stm32l4xx.c **** 
 180:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_FunctionPrototypes
 181:Core/Src/system_stm32l4xx.c ****   * @{
 182:Core/Src/system_stm32l4xx.c ****   */
 183:Core/Src/system_stm32l4xx.c **** 
 184:Core/Src/system_stm32l4xx.c **** /**
 185:Core/Src/system_stm32l4xx.c ****   * @}
 186:Core/Src/system_stm32l4xx.c ****   */
 187:Core/Src/system_stm32l4xx.c **** 
 188:Core/Src/system_stm32l4xx.c **** /** @addtogroup STM32L4xx_System_Private_Functions
 189:Core/Src/system_stm32l4xx.c ****   * @{
 190:Core/Src/system_stm32l4xx.c ****   */
 191:Core/Src/system_stm32l4xx.c **** 
 192:Core/Src/system_stm32l4xx.c **** /**
 193:Core/Src/system_stm32l4xx.c ****   * @brief  Setup the microcontroller system.
 194:Core/Src/system_stm32l4xx.c ****   * @retval None
 195:Core/Src/system_stm32l4xx.c ****   */
 196:Core/Src/system_stm32l4xx.c **** 
 197:Core/Src/system_stm32l4xx.c **** void SystemInit(void)
 198:Core/Src/system_stm32l4xx.c **** {
  28              		.loc 1 198 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 5


  32              		@ link register save eliminated.
 199:Core/Src/system_stm32l4xx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 200:Core/Src/system_stm32l4xx.c ****   /* Configure the Vector Table location -------------------------------------*/
 201:Core/Src/system_stm32l4xx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 202:Core/Src/system_stm32l4xx.c **** #endif
 203:Core/Src/system_stm32l4xx.c **** 
 204:Core/Src/system_stm32l4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 205:Core/Src/system_stm32l4xx.c **** #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 206:Core/Src/system_stm32l4xx.c ****   SCB->CPACR |= ((3UL << 20U)|(3UL << 22U));  /* set CP10 and CP11 Full Access */
  33              		.loc 1 206 0
  34 0000 034A     		ldr	r2, .L2
  35 0002 D2F88830 		ldr	r3, [r2, #136]
  36 0006 43F47003 		orr	r3, r3, #15728640
  37 000a C2F88830 		str	r3, [r2, #136]
 207:Core/Src/system_stm32l4xx.c **** #endif
 208:Core/Src/system_stm32l4xx.c **** }
  38              		.loc 1 208 0
  39 000e 7047     		bx	lr
  40              	.L3:
  41              		.align	2
  42              	.L2:
  43 0010 00ED00E0 		.word	-536810240
  44              		.cfi_endproc
  45              	.LFE132:
  47              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
  48              		.align	1
  49              		.global	SystemCoreClockUpdate
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  53              		.fpu fpv4-sp-d16
  55              	SystemCoreClockUpdate:
  56              	.LFB133:
 209:Core/Src/system_stm32l4xx.c **** 
 210:Core/Src/system_stm32l4xx.c **** /**
 211:Core/Src/system_stm32l4xx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 212:Core/Src/system_stm32l4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 213:Core/Src/system_stm32l4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 214:Core/Src/system_stm32l4xx.c ****   *         other parameters.
 215:Core/Src/system_stm32l4xx.c ****   *
 216:Core/Src/system_stm32l4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 217:Core/Src/system_stm32l4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 218:Core/Src/system_stm32l4xx.c ****   *         based on this variable will be incorrect.
 219:Core/Src/system_stm32l4xx.c ****   *
 220:Core/Src/system_stm32l4xx.c ****   * @note   - The system frequency computed by this function is not the real
 221:Core/Src/system_stm32l4xx.c ****   *           frequency in the chip. It is calculated based on the predefined
 222:Core/Src/system_stm32l4xx.c ****   *           constant and the selected clock source:
 223:Core/Src/system_stm32l4xx.c ****   *
 224:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 225:Core/Src/system_stm32l4xx.c ****   *
 226:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 227:Core/Src/system_stm32l4xx.c ****   *
 228:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 229:Core/Src/system_stm32l4xx.c ****   *
 230:Core/Src/system_stm32l4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 231:Core/Src/system_stm32l4xx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 232:Core/Src/system_stm32l4xx.c ****   *
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 6


 233:Core/Src/system_stm32l4xx.c ****   *         (*) MSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 234:Core/Src/system_stm32l4xx.c ****   *             4 MHz) but the real value may vary depending on the variations
 235:Core/Src/system_stm32l4xx.c ****   *             in voltage and temperature.
 236:Core/Src/system_stm32l4xx.c ****   *
 237:Core/Src/system_stm32l4xx.c ****   *         (**) HSI_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 238:Core/Src/system_stm32l4xx.c ****   *              16 MHz) but the real value may vary depending on the variations
 239:Core/Src/system_stm32l4xx.c ****   *              in voltage and temperature.
 240:Core/Src/system_stm32l4xx.c ****   *
 241:Core/Src/system_stm32l4xx.c ****   *         (***) HSE_VALUE is a constant defined in stm32l4xx_hal.h file (default value
 242:Core/Src/system_stm32l4xx.c ****   *              8 MHz), user has to ensure that HSE_VALUE is same as the real
 243:Core/Src/system_stm32l4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 244:Core/Src/system_stm32l4xx.c ****   *              have wrong result.
 245:Core/Src/system_stm32l4xx.c ****   *
 246:Core/Src/system_stm32l4xx.c ****   *         - The result of this function could be not correct when using fractional
 247:Core/Src/system_stm32l4xx.c ****   *           value for HSE crystal.
 248:Core/Src/system_stm32l4xx.c ****   *
 249:Core/Src/system_stm32l4xx.c ****   * @retval None
 250:Core/Src/system_stm32l4xx.c ****   */
 251:Core/Src/system_stm32l4xx.c **** void SystemCoreClockUpdate(void)
 252:Core/Src/system_stm32l4xx.c **** {
  57              		.loc 1 252 0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
  61              		@ link register save eliminated.
 253:Core/Src/system_stm32l4xx.c ****   uint32_t tmp, msirange, pllvco, pllsource, pllm, pllr;
 254:Core/Src/system_stm32l4xx.c **** 
 255:Core/Src/system_stm32l4xx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 256:Core/Src/system_stm32l4xx.c ****   if ((RCC->CR & RCC_CR_MSIRGSEL) == 0U)
  62              		.loc 1 256 0
  63 0000 2F4B     		ldr	r3, .L19
  64 0002 1B68     		ldr	r3, [r3]
  65 0004 13F0080F 		tst	r3, #8
  66 0008 16D1     		bne	.L5
 257:Core/Src/system_stm32l4xx.c ****   { /* MSISRANGE from RCC_CSR applies */
 258:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CSR & RCC_CSR_MSISRANGE) >> 8U;
  67              		.loc 1 258 0
  68 000a 2D4B     		ldr	r3, .L19
  69 000c D3F89430 		ldr	r3, [r3, #148]
  70 0010 C3F30323 		ubfx	r3, r3, #8, #4
  71              	.LVL0:
  72              	.L6:
 259:Core/Src/system_stm32l4xx.c ****   }
 260:Core/Src/system_stm32l4xx.c ****   else
 261:Core/Src/system_stm32l4xx.c ****   { /* MSIRANGE from RCC_CR applies */
 262:Core/Src/system_stm32l4xx.c ****     msirange = (RCC->CR & RCC_CR_MSIRANGE) >> 4U;
 263:Core/Src/system_stm32l4xx.c ****   }
 264:Core/Src/system_stm32l4xx.c ****   /*MSI frequency range in HZ*/
 265:Core/Src/system_stm32l4xx.c ****   msirange = MSIRangeTable[msirange];
  73              		.loc 1 265 0
  74 0014 2B4A     		ldr	r2, .L19+4
  75 0016 52F82310 		ldr	r1, [r2, r3, lsl #2]
  76              	.LVL1:
 266:Core/Src/system_stm32l4xx.c **** 
 267:Core/Src/system_stm32l4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 268:Core/Src/system_stm32l4xx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
  77              		.loc 1 268 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 7


  78 001a 294A     		ldr	r2, .L19
  79 001c 9368     		ldr	r3, [r2, #8]
  80 001e 03F00C03 		and	r3, r3, #12
  81 0022 0C2B     		cmp	r3, #12
  82 0024 48D8     		bhi	.L7
  83 0026 DFE803F0 		tbb	[pc, r3]
  84              	.L9:
  85 002a 0C       		.byte	(.L8-.L9)/2
  86 002b 47       		.byte	(.L7-.L9)/2
  87 002c 47       		.byte	(.L7-.L9)/2
  88 002d 47       		.byte	(.L7-.L9)/2
  89 002e 19       		.byte	(.L10-.L9)/2
  90 002f 47       		.byte	(.L7-.L9)/2
  91 0030 47       		.byte	(.L7-.L9)/2
  92 0031 47       		.byte	(.L7-.L9)/2
  93 0032 1D       		.byte	(.L11-.L9)/2
  94 0033 47       		.byte	(.L7-.L9)/2
  95 0034 47       		.byte	(.L7-.L9)/2
  96 0035 47       		.byte	(.L7-.L9)/2
  97 0036 21       		.byte	(.L12-.L9)/2
  98              	.LVL2:
  99 0037 00       		.p2align 1
 100              	.L5:
 262:Core/Src/system_stm32l4xx.c ****   }
 101              		.loc 1 262 0
 102 0038 214B     		ldr	r3, .L19
 103 003a 1B68     		ldr	r3, [r3]
 104 003c C3F30313 		ubfx	r3, r3, #4, #4
 105              	.LVL3:
 106 0040 E8E7     		b	.L6
 107              	.LVL4:
 108              	.L8:
 269:Core/Src/system_stm32l4xx.c ****   {
 270:Core/Src/system_stm32l4xx.c ****     case 0x00:  /* MSI used as system clock source */
 271:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 109              		.loc 1 271 0
 110 0042 214B     		ldr	r3, .L19+8
 111 0044 1960     		str	r1, [r3]
 112              	.LVL5:
 113              	.L13:
 272:Core/Src/system_stm32l4xx.c ****       break;
 273:Core/Src/system_stm32l4xx.c **** 
 274:Core/Src/system_stm32l4xx.c ****     case 0x04:  /* HSI used as system clock source */
 275:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSI_VALUE;
 276:Core/Src/system_stm32l4xx.c ****       break;
 277:Core/Src/system_stm32l4xx.c **** 
 278:Core/Src/system_stm32l4xx.c ****     case 0x08:  /* HSE used as system clock source */
 279:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = HSE_VALUE;
 280:Core/Src/system_stm32l4xx.c ****       break;
 281:Core/Src/system_stm32l4xx.c **** 
 282:Core/Src/system_stm32l4xx.c ****     case 0x0C:  /* PLL used as system clock  source */
 283:Core/Src/system_stm32l4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 284:Core/Src/system_stm32l4xx.c ****          SYSCLK = PLL_VCO / PLLR
 285:Core/Src/system_stm32l4xx.c ****          */
 286:Core/Src/system_stm32l4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 287:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 288:Core/Src/system_stm32l4xx.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 8


 289:Core/Src/system_stm32l4xx.c ****       switch (pllsource)
 290:Core/Src/system_stm32l4xx.c ****       {
 291:Core/Src/system_stm32l4xx.c ****         case 0x02:  /* HSI used as PLL clock source */
 292:Core/Src/system_stm32l4xx.c ****           pllvco = (HSI_VALUE / pllm);
 293:Core/Src/system_stm32l4xx.c ****           break;
 294:Core/Src/system_stm32l4xx.c **** 
 295:Core/Src/system_stm32l4xx.c ****         case 0x03:  /* HSE used as PLL clock source */
 296:Core/Src/system_stm32l4xx.c ****           pllvco = (HSE_VALUE / pllm);
 297:Core/Src/system_stm32l4xx.c ****           break;
 298:Core/Src/system_stm32l4xx.c **** 
 299:Core/Src/system_stm32l4xx.c ****         default:    /* MSI used as PLL clock source */
 300:Core/Src/system_stm32l4xx.c ****           pllvco = (msirange / pllm);
 301:Core/Src/system_stm32l4xx.c ****           break;
 302:Core/Src/system_stm32l4xx.c ****       }
 303:Core/Src/system_stm32l4xx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 8U);
 304:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 305:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 306:Core/Src/system_stm32l4xx.c ****       break;
 307:Core/Src/system_stm32l4xx.c **** 
 308:Core/Src/system_stm32l4xx.c ****     default:
 309:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = msirange;
 310:Core/Src/system_stm32l4xx.c ****       break;
 311:Core/Src/system_stm32l4xx.c ****   }
 312:Core/Src/system_stm32l4xx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 313:Core/Src/system_stm32l4xx.c ****   /* Get HCLK prescaler */
 314:Core/Src/system_stm32l4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4U)];
 114              		.loc 1 314 0
 115 0046 1E4B     		ldr	r3, .L19
 116 0048 9B68     		ldr	r3, [r3, #8]
 117 004a C3F30313 		ubfx	r3, r3, #4, #4
 118 004e 1F4A     		ldr	r2, .L19+12
 119 0050 D15C     		ldrb	r1, [r2, r3]	@ zero_extendqisi2
 120              	.LVL6:
 315:Core/Src/system_stm32l4xx.c ****   /* HCLK clock frequency */
 316:Core/Src/system_stm32l4xx.c ****   SystemCoreClock >>= tmp;
 121              		.loc 1 316 0
 122 0052 1D4A     		ldr	r2, .L19+8
 123 0054 1368     		ldr	r3, [r2]
 124 0056 CB40     		lsrs	r3, r3, r1
 125 0058 1360     		str	r3, [r2]
 317:Core/Src/system_stm32l4xx.c **** }
 126              		.loc 1 317 0
 127 005a 7047     		bx	lr
 128              	.LVL7:
 129              	.L10:
 275:Core/Src/system_stm32l4xx.c ****       break;
 130              		.loc 1 275 0
 131 005c 1A4B     		ldr	r3, .L19+8
 132 005e 1C4A     		ldr	r2, .L19+16
 133 0060 1A60     		str	r2, [r3]
 276:Core/Src/system_stm32l4xx.c **** 
 134              		.loc 1 276 0
 135 0062 F0E7     		b	.L13
 136              	.L11:
 279:Core/Src/system_stm32l4xx.c ****       break;
 137              		.loc 1 279 0
 138 0064 184B     		ldr	r3, .L19+8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 9


 139 0066 1B4A     		ldr	r2, .L19+20
 140 0068 1A60     		str	r2, [r3]
 280:Core/Src/system_stm32l4xx.c **** 
 141              		.loc 1 280 0
 142 006a ECE7     		b	.L13
 143              	.L12:
 286:Core/Src/system_stm32l4xx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> 4U) + 1U ;
 144              		.loc 1 286 0
 145 006c 144B     		ldr	r3, .L19
 146 006e DA68     		ldr	r2, [r3, #12]
 147 0070 02F00302 		and	r2, r2, #3
 148              	.LVL8:
 287:Core/Src/system_stm32l4xx.c **** 
 149              		.loc 1 287 0
 150 0074 DB68     		ldr	r3, [r3, #12]
 151 0076 C3F30213 		ubfx	r3, r3, #4, #3
 152 007a 0133     		adds	r3, r3, #1
 153              	.LVL9:
 289:Core/Src/system_stm32l4xx.c ****       {
 154              		.loc 1 289 0
 155 007c 022A     		cmp	r2, #2
 156 007e 04D0     		beq	.L15
 157 0080 032A     		cmp	r2, #3
 158 0082 15D0     		beq	.L16
 300:Core/Src/system_stm32l4xx.c ****           break;
 159              		.loc 1 300 0
 160 0084 B1FBF3F3 		udiv	r3, r1, r3
 161              	.LVL10:
 301:Core/Src/system_stm32l4xx.c ****       }
 162              		.loc 1 301 0
 163 0088 02E0     		b	.L17
 164              	.LVL11:
 165              	.L15:
 292:Core/Src/system_stm32l4xx.c ****           break;
 166              		.loc 1 292 0
 167 008a 114A     		ldr	r2, .L19+16
 168              	.LVL12:
 169 008c B2FBF3F3 		udiv	r3, r2, r3
 170              	.LVL13:
 171              	.L17:
 303:Core/Src/system_stm32l4xx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> 25U) + 1U) * 2U;
 172              		.loc 1 303 0
 173 0090 0B49     		ldr	r1, .L19
 174              	.LVL14:
 175 0092 CA68     		ldr	r2, [r1, #12]
 176 0094 C2F30622 		ubfx	r2, r2, #8, #7
 177 0098 03FB02F3 		mul	r3, r3, r2
 178              	.LVL15:
 304:Core/Src/system_stm32l4xx.c ****       SystemCoreClock = pllvco/pllr;
 179              		.loc 1 304 0
 180 009c CA68     		ldr	r2, [r1, #12]
 181 009e C2F34162 		ubfx	r2, r2, #25, #2
 182 00a2 0132     		adds	r2, r2, #1
 183 00a4 5200     		lsls	r2, r2, #1
 184              	.LVL16:
 305:Core/Src/system_stm32l4xx.c ****       break;
 185              		.loc 1 305 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 10


 186 00a6 B3FBF2F3 		udiv	r3, r3, r2
 187              	.LVL17:
 188 00aa 074A     		ldr	r2, .L19+8
 189              	.LVL18:
 190 00ac 1360     		str	r3, [r2]
 306:Core/Src/system_stm32l4xx.c **** 
 191              		.loc 1 306 0
 192 00ae CAE7     		b	.L13
 193              	.LVL19:
 194              	.L16:
 296:Core/Src/system_stm32l4xx.c ****           break;
 195              		.loc 1 296 0
 196 00b0 084A     		ldr	r2, .L19+20
 197              	.LVL20:
 198 00b2 B2FBF3F3 		udiv	r3, r2, r3
 199              	.LVL21:
 297:Core/Src/system_stm32l4xx.c **** 
 200              		.loc 1 297 0
 201 00b6 EBE7     		b	.L17
 202              	.LVL22:
 203              	.L7:
 309:Core/Src/system_stm32l4xx.c ****       break;
 204              		.loc 1 309 0
 205 00b8 034B     		ldr	r3, .L19+8
 206 00ba 1960     		str	r1, [r3]
 310:Core/Src/system_stm32l4xx.c ****   }
 207              		.loc 1 310 0
 208 00bc C3E7     		b	.L13
 209              	.L20:
 210 00be 00BF     		.align	2
 211              	.L19:
 212 00c0 00100240 		.word	1073876992
 213 00c4 00000000 		.word	.LANCHOR0
 214 00c8 00000000 		.word	.LANCHOR1
 215 00cc 00000000 		.word	.LANCHOR2
 216 00d0 0024F400 		.word	16000000
 217 00d4 00127A00 		.word	8000000
 218              		.cfi_endproc
 219              	.LFE133:
 221              		.global	MSIRangeTable
 222              		.global	APBPrescTable
 223              		.global	AHBPrescTable
 224              		.global	SystemCoreClock
 225              		.section	.data.SystemCoreClock,"aw",%progbits
 226              		.align	2
 227              		.set	.LANCHOR1,. + 0
 230              	SystemCoreClock:
 231 0000 00093D00 		.word	4000000
 232              		.section	.rodata.AHBPrescTable,"a",%progbits
 233              		.align	2
 234              		.set	.LANCHOR2,. + 0
 237              	AHBPrescTable:
 238 0000 00       		.byte	0
 239 0001 00       		.byte	0
 240 0002 00       		.byte	0
 241 0003 00       		.byte	0
 242 0004 00       		.byte	0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 11


 243 0005 00       		.byte	0
 244 0006 00       		.byte	0
 245 0007 00       		.byte	0
 246 0008 01       		.byte	1
 247 0009 02       		.byte	2
 248 000a 03       		.byte	3
 249 000b 04       		.byte	4
 250 000c 06       		.byte	6
 251 000d 07       		.byte	7
 252 000e 08       		.byte	8
 253 000f 09       		.byte	9
 254              		.section	.rodata.APBPrescTable,"a",%progbits
 255              		.align	2
 258              	APBPrescTable:
 259 0000 00       		.byte	0
 260 0001 00       		.byte	0
 261 0002 00       		.byte	0
 262 0003 00       		.byte	0
 263 0004 01       		.byte	1
 264 0005 02       		.byte	2
 265 0006 03       		.byte	3
 266 0007 04       		.byte	4
 267              		.section	.rodata.MSIRangeTable,"a",%progbits
 268              		.align	2
 269              		.set	.LANCHOR0,. + 0
 272              	MSIRangeTable:
 273 0000 A0860100 		.word	100000
 274 0004 400D0300 		.word	200000
 275 0008 801A0600 		.word	400000
 276 000c 00350C00 		.word	800000
 277 0010 40420F00 		.word	1000000
 278 0014 80841E00 		.word	2000000
 279 0018 00093D00 		.word	4000000
 280 001c 00127A00 		.word	8000000
 281 0020 0024F400 		.word	16000000
 282 0024 00366E01 		.word	24000000
 283 0028 0048E801 		.word	32000000
 284 002c 006CDC02 		.word	48000000
 285              		.text
 286              	.Letext0:
 287              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 288              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 289              		.file 4 "Drivers/CMSIS/Include/core_cm4.h"
 290              		.file 5 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/system_stm32l4xx.h"
 291              		.file 6 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l431xx.h"
 292              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 293              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_flash.h"
 294              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccEp67VO.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32l4xx.c
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:18     .text.SystemInit:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:25     .text.SystemInit:00000000 SystemInit
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:43     .text.SystemInit:00000010 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:48     .text.SystemCoreClockUpdate:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:55     .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:85     .text.SystemCoreClockUpdate:0000002a $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:212    .text.SystemCoreClockUpdate:000000c0 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:272    .rodata.MSIRangeTable:00000000 MSIRangeTable
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:258    .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:237    .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:230    .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:226    .data.SystemCoreClock:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:233    .rodata.AHBPrescTable:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:255    .rodata.APBPrescTable:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:268    .rodata.MSIRangeTable:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:99     .text.SystemCoreClockUpdate:00000037 $d
C:\Users\82057\AppData\Local\Temp\ccEp67VO.s:99     .text.SystemCoreClockUpdate:00000038 $t

NO UNDEFINED SYMBOLS
