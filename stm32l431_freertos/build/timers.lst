ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"timers.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.prvGetNextExpireTime,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu fpv4-sp-d16
  24              	prvGetNextExpireTime:
  25              	.LFB19:
  26              		.file 1 "Middlewares/Third_Party/FreeRTOS/Source/timers.c"
   1:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Standard includes. */
  29:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include <stdlib.h>
  30:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  31:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  32:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** all the API functions to use the MPU wrappers.  That should only be done when
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 2


  33:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** task.h is included from an application file. */
  34:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  35:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "FreeRTOS.h"
  37:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "task.h"
  38:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "queue.h"
  39:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #include "timers.h"
  40:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  41:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( INCLUDE_xTimerPendFunctionCall == 1 ) && ( configUSE_TIMERS == 0 )
  42:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#error configUSE_TIMERS must be set to 1 to make the xTimerPendFunctionCall() function available.
  43:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  44:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  45:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  46:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  47:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** for the header files above, but not in this file, in order to generate the
  48:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** correct privileged Vs unprivileged linkage and placement. */
  49:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e9021 !e961 !e750. */
  50:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  51:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  52:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* This entire source file will be skipped if the application is not configured
  53:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** to include software timer functionality.  This #if is closed at the very bottom
  54:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** of this file.  If you want to include software timer functionality then ensure
  55:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** configUSE_TIMERS is set to 1 in FreeRTOSConfig.h. */
  56:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TIMERS == 1 )
  57:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  58:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Misc definitions. */
  59:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrNO_DELAY		( TickType_t ) 0U
  60:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  61:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The name assigned to the timer service task.  This can be overridden by
  62:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** defining trmTIMER_SERVICE_TASK_NAME in FreeRTOSConfig.h. */
  63:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #ifndef configTIMER_SERVICE_TASK_NAME
  64:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#define configTIMER_SERVICE_TASK_NAME "Tmr Svc"
  65:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
  66:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  67:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* Bit definitions used in the ucStatus member of a timer structure. */
  68:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_ACTIVE					( ( uint8_t ) 0x01 )
  69:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_STATICALLY_ALLOCATED	( ( uint8_t ) 0x02 )
  70:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #define tmrSTATUS_IS_AUTORELOAD				( ( uint8_t ) 0x04 )
  71:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of the timers themselves. */
  73:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerControl /* The old naming convention is used to prevent breaking kernel awar
  74:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  75:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	const char				*pcTimerName;		/*<< Text name.  This is not used by the kernel, it is included simpl
  76:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	ListItem_t				xTimerListItem;		/*<< Standard linked list item as used by all kernel features for e
  77:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t				xTimerPeriodInTicks;/*<< How quickly and often the timer expires. */
  78:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void 					*pvTimerID;			/*<< An ID to identify the timer.  This allows the timer to be identified 
  79:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerCallbackFunction_t	pxCallbackFunction;	/*<< The function that will be called when the timer e
  80:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_TRACE_FACILITY == 1 )
  81:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		UBaseType_t			uxTimerNumber;		/*<< An ID assigned by trace tools such as FreeRTOS+Trace */
  82:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif
  83:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint8_t 				ucStatus;			/*<< Holds bits to say if the timer was statically allocated or not, and i
  84:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } xTIMER;
  85:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
  86:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The old xTIMER name is maintained above then typedefed to the new Timer_t
  87:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** name below to enable the use of older kernel aware debuggers. */
  88:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef xTIMER Timer_t;
  89:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 3


  90:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The definition of messages that can be sent and received on the timer queue.
  91:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Two types of message can be queued - messages that manipulate a software timer,
  92:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and messages that request the execution of a non-timer related callback.  The
  93:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** two message types are defined in two separate structures, xTimerParametersType
  94:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** and xCallbackParametersType respectively. */
  95:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerParameters
  96:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  97:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TickType_t			xMessageValue;		/*<< An optional value used by a subset of commands, for example, whe
  98:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *			pxTimer;			/*<< The timer to which the command will be applied. */
  99:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } TimerParameter_t;
 100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrCallbackParameters
 103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	PendedFunction_t	pxCallbackFunction;	/* << The callback function to execute. */
 105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void *pvParameter1;						/* << The value that will be used as the callback functions first paramet
 106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	uint32_t ulParameter2;					/* << The value that will be used as the callback functions second para
 107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } CallbackParameters_t;
 108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The structure that contains the two message types, along with an identifier
 110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** that is used to determine which message type is valid. */
 111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** typedef struct tmrTimerQueueMessage
 112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t			xMessageID;			/*<< The command being sent to the timer service task. */
 114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	union
 115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		TimerParameter_t xTimerParameters;
 117:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 118:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Don't include xCallbackParameters if it is not going to be used as
 119:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it makes the structure (and therefore the timer queue) larger. */
 120:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 121:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			CallbackParameters_t xCallbackParameters;
 122:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 123:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	} u;
 124:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } DaemonTaskMessage_t;
 125:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 126:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 127:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** which static variables must be declared volatile. */
 128:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* The list in which active timers are stored.  Timers are referenced in expire
 130:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** time order, with the nearest expiry time at the front of the list.  Only the
 131:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** timer service task is allowed to access these lists.
 132:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** xActiveTimerList1 and xActiveTimerList2 could be at function scope but that
 133:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** breaks some kernel aware debuggers, and debuggers that reply on removing the
 134:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static qualifier. */
 135:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList1;
 136:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t xActiveTimerList2;
 137:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxCurrentTimerList;
 138:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static List_t *pxOverflowTimerList;
 139:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 140:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /* A queue that is used to send commands to the timer service task. */
 141:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static QueueHandle_t xTimerQueue = NULL;
 142:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TaskHandle_t xTimerTaskHandle = NULL;
 143:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 144:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*lint -restore */
 145:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 146:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 4


 147:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 148:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 149:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 150:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If static allocation is supported then the application must provide the
 151:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	following callback function - which enables the application to optionally
 152:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	provide the memory that will be used by the timer task as the task's stack
 153:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	and TCB. */
 154:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	extern void vApplicationGetTimerTaskMemory( StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **pp
 155:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 156:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif
 157:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 158:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 159:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Initialise the infrastructure used by the timer service task if it has not
 160:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * been initialised already.
 161:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 162:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void ) PRIVILEGED_FUNCTION;
 163:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 164:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 165:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The timer service task (daemon).  Timer functionality is controlled by this
 166:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * task.  Other tasks communicate with the timer service task using the
 167:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * xTimerQueue queue.
 168:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 169:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION_PROTO( prvTimerTask, pvParameters ) PRIVILEGED_FUNCTION;
 170:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 171:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 172:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called by the timer service task to interpret and process a command it
 173:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * received on the timer queue.
 174:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 175:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessReceivedCommands( void ) PRIVILEGED_FUNCTION;
 176:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 178:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Insert the timer into either xActiveTimerList1, or xActiveTimerList2,
 179:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * depending on if the expire time causes a timer counter overflow.
 180:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 181:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 182:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 183:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 184:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * An active timer has reached its expire time.  Reload the timer if it is an
 185:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * auto-reload timer, then call its callback.
 186:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 187:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow ) P
 188:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 190:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * The tick count has overflowed.  Switch the timer lists after ensuring the
 191:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * current timer list does not still reference some timers.
 192:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 193:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void ) PRIVILEGED_FUNCTION;
 194:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 196:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Obtain the current tick count, setting *pxTimerListsWereSwitched to pdTRUE
 197:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * if a tick count overflow occurred since prvSampleTimeNow() was last called.
 198:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 199:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched ) PRIVILEGED_FUNCTI
 200:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 201:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 202:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If the timer list contains any active timers then return the expire time of
 203:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * the timer that will expire first and set *pxListWasEmpty to false.  If the
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 5


 204:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * timer list does not contain any timers then return 0 and set *pxListWasEmpty
 205:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * to pdTRUE.
 206:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 207:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty ) PRIVILEGED_FUNCTION;
 208:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 209:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 210:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * If a timer has expired, process it.  Otherwise, block the timer service task
 211:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * until either a timer does expire or a command is received.
 212:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 213:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 214:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 215:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*
 216:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * Called after a Timer_t structure has been allocated either statically or
 217:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  * dynamically to fill in the structure's members.
 218:Middlewares/Third_Party/FreeRTOS/Source/timers.c ****  */
 219:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 220:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 221:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 222:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 223:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 224:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer ) PRIVILEGED_FUNCTION;
 225:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 226:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 227:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerCreateTimerTask( void )
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 229:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 230:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 231:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* This function is called when the scheduler is started if
 232:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configUSE_TIMERS is set to 1.  Check that the infrastructure used by the
 233:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer service task has been created/initialised.  If timers have already
 234:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been created then the initialisation will already have been performed. */
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	prvCheckForValidListAndQueue();
 236:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 238:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 239:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 240:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 243:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 244:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStac
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 247:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 248:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													ulTimerTaskStackSize,
 249:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													NULL,
 250:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 251:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskStackBuffer,
 252:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													pxTimerTaskTCBBuffer );
 253:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTimerTaskHandle != NULL )
 255:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 256:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = pdPASS;
 257:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 258:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 259:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#else
 260:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 6


 261:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xTaskCreate(	prvTimerTask,
 262:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_SERVICE_TASK_NAME,
 263:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									configTIMER_TASK_STACK_DEPTH,
 264:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									NULL,
 265:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									( ( UBaseType_t ) configTIMER_TASK_PRIORITY ) | portPRIVILEGE_BIT,
 266:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									&xTimerTaskHandle );
 267:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 268:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configSUPPORT_STATIC_ALLOCATION */
 269:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 270:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 271:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 272:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 273:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 274:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xReturn );
 276:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 278:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 279:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 280:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 281:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 282:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreate(	const char * const pcTimerName,			/*lint !e971 Unqualified char types 
 283:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const TickType_t xTimerPeriodInTicks,
 284:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								const UBaseType_t uxAutoReload,
 285:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								void * const pvTimerID,
 286:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 								TimerCallbackFunction_t pxCallbackFunction )
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 288:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 289:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pvPortMalloc( sizeof( Timer_t ) ); /*lint !e9087 !e9079 All values ret
 291:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 293:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 294:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Status is thus far zero as the timer is not created statically
 295:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and has not been started.  The auto-reload bit may get set in
 296:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer. */
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = 0x00;
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 299:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 300:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 301:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 303:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 305:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 306:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 307:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 308:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 309:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	TimerHandle_t xTimerCreateStatic(	const char * const pcTimerName,		/*lint !e971 Unqualified char t
 310:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const TickType_t xTimerPeriodInTicks,
 311:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										const UBaseType_t uxAutoReload,
 312:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										void * const pvTimerID,
 313:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										TimerCallbackFunction_t pxCallbackFunction,
 314:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 										StaticTimer_t *pxTimerBuffer )
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 316:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 317:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 7


 318:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if( configASSERT_DEFINED == 1 )
 319:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Sanity check that the size of the structure used to declare a
 321:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			variable of type StaticTimer_t equals the size of the real timer
 322:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			structure. */
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			volatile size_t xSize = sizeof( StaticTimer_t );
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 326:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 327:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* configASSERT_DEFINED */
 328:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 329:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* A pointer to a StaticTimer_t structure MUST be provided, use it. */
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( pxTimerBuffer );
 331:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 332:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 333:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( pxNewTimer != NULL )
 334:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 335:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Timers can be created statically or dynamically so note this
 336:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			timer was created statically in case it is later deleted.  The
 337:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			auto-reload bit may get set in prvInitialiseNewTimer(). */
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus = tmrSTATUS_IS_STATICALLY_ALLOCATED;
 339:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 341:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 342:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 343:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return pxNewTimer;
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 345:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 346:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configSUPPORT_STATIC_ALLOCATION */
 347:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 348:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 349:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvInitialiseNewTimer(	const char * const pcTimerName,			/*lint !e971 Unqualified char 
 350:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const TickType_t xTimerPeriodInTicks,
 351:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									const UBaseType_t uxAutoReload,
 352:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									void * const pvTimerID,
 353:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									TimerCallbackFunction_t pxCallbackFunction,
 354:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 									Timer_t *pxNewTimer )
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 356:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerPeriodInTicks > 0 ) );
 358:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( pxNewTimer != NULL )
 360:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 361:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the infrastructure used by the timer service task has been
 362:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		created/initialised. */
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvCheckForValidListAndQueue();
 364:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 365:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Initialise the timer structure members using the function
 366:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		parameters. */
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pcTimerName = pcTimerName;
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 373:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxNewTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 8


 375:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 376:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_CREATE( pxNewTimer );
 377:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 379:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 380:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 381:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerGenericCommand( TimerHandle_t xTimer, const BaseType_t xCommandID, const TickType_
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 384:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 385:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 387:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 388:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Send a message to the timer service task to perform a particular action
 389:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	on a particular timer definition. */
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimerQueue != NULL )
 391:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 392:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Send a command to the timer service task to start the xTimer timer. */
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = xCommandID;
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 396:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 398:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 400:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 402:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 403:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 404:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 406:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 407:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 408:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 409:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 411:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 412:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 413:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_COMMAND_SEND( xTimer, xCommandID, xOptionalValue, xReturn );
 414:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 415:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 416:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 417:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 418:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 419:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 422:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 423:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 424:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TaskHandle_t xTimerGetTimerDaemonTaskHandle( void )
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 426:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 427:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	started, then xTimerTaskHandle will be NULL. */
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( ( xTimerTaskHandle != NULL ) );
 429:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 431:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 9


 432:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 433:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetPeriod( TimerHandle_t xTimer )
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 435:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 436:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 438:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 440:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 441:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 442:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetReloadMode( TimerHandle_t xTimer, const UBaseType_t uxAutoReload )
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 444:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 445:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 448:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 450:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus |= tmrSTATUS_IS_AUTORELOAD;
 452:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 453:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 454:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer->ucStatus &= ~tmrSTATUS_IS_AUTORELOAD;
 456:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 457:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 460:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 461:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 462:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxTimerGetReloadMode( TimerHandle_t xTimer )
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 464:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 465:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** UBaseType_t uxReturn;
 466:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 469:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) == 0 )
 471:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 472:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Not an auto-reload timer. */
 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdFALSE;
 474:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 475:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 476:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 477:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Is an auto-reload timer. */
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uxReturn = ( UBaseType_t ) pdTRUE;
 479:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 480:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 482:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 483:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return uxReturn;
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 485:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 486:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 487:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimerGetExpiryTime( TimerHandle_t xTimer )
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 10


 489:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 490:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xReturn;
 491:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 493:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 494:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 496:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 497:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 498:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** const char * pcTimerGetName( TimerHandle_t xTimer ) /*lint !e971 Unqualified char types are allowed
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 500:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 501:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 503:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 505:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 506:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 507:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessExpiredTimer( const TickType_t xNextExpireTime, const TickType_t xTimeNow )
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 509:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !
 511:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 512:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Remove the timer from the list of active timers.  A check has already
 513:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	been performed to ensure the list is not empty. */
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 515:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 516:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 517:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If the timer is an auto-reload timer then calculate the next
 518:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	expiry time and re-insert the timer in the list of active timers. */
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 520:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 521:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* The timer is inserted into a list using a time relative to anything
 522:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		other than the current time.  It will therefore be inserted into the
 523:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		correct list relative to the time this task thinks it is now. */
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTim
 525:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 526:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The timer expired before it was added to the active timer
 527:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			list.  Reload it now.  */
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmr
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 530:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 531:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 532:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 533:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 534:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 535:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 536:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 537:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 538:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 540:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 541:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 542:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 543:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Call the timer callback. */
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 11


 546:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 547:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 548:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static portTASK_FUNCTION( prvTimerTask, pvParameters )
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 550:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 551:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xListWasEmpty;
 552:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 553:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Just to avoid compiler warnings. */
 554:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	( void ) pvParameters;
 555:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 556:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#if( configUSE_DAEMON_TASK_STARTUP_HOOK == 1 )
 557:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 558:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		extern void vApplicationDaemonTaskStartupHook( void );
 559:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 560:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Allow the application writer to execute some code in the context of
 561:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		this task at the point the task starts executing.  This is useful if the
 562:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		application includes initialisation code that would benefit from
 563:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		executing after the scheduler has been started. */
 564:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vApplicationDaemonTaskStartupHook();
 565:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 566:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	#endif /* configUSE_DAEMON_TASK_STARTUP_HOOK */
 567:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 568:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	for( ;; )
 569:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 570:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Query the timers list to see if it contains any timers, and if so,
 571:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		obtain the time at which the next timer will expire. */
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = prvGetNextExpireTime( &xListWasEmpty );
 573:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* If a timer has expired, process it.  Otherwise, block this task
 575:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		until either a timer does expire, or a command is received. */
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessTimerOrBlockTask( xNextExpireTime, xListWasEmpty );
 577:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 578:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Empty the command queue. */
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvProcessReceivedCommands();
 580:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 581:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 582:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 583:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 584:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvProcessTimerOrBlockTask( const TickType_t xNextExpireTime, BaseType_t xListWasEmpty 
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 586:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 587:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched;
 588:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	vTaskSuspendAll();
 590:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 591:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Obtain the time now to make an assessment as to whether the timer
 592:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		has expired or not.  If obtaining the time causes the lists to switch
 593:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		then don't process this timer as any timers that remained in the list
 594:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		when the lists were switched will have been processed within the
 595:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSampleTimeNow() function. */
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 598:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 599:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The tick count has not overflowed, has the timer expired? */
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 601:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xTaskResumeAll();
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 12


 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 604:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 605:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 606:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 607:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The tick count has not overflowed, and the next expire
 608:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				time has not been reached yet.  This task should therefore
 609:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				block to wait for the next expire time or a command to be
 610:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				received - whichever comes first.  The following line cannot
 611:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				be reached unless xNextExpireTime > xTimeNow, except in the
 612:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case when the current timer list is empty. */
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xListWasEmpty != pdFALSE )
 614:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 615:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The current timer list is empty - is the overflow list
 616:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					also empty? */
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 618:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 619:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 621:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTaskResumeAll() == pdFALSE )
 623:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 624:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Yield to wait for either a command to arrive, or the
 625:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					block time to expire.  If a command arrived between the
 626:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					critical section being exited and this yield then the yield
 627:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					will not cause the task to block. */
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					portYIELD_WITHIN_API();
 629:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 630:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 631:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 632:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 633:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 634:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 635:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 636:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 637:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xTaskResumeAll();
 639:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 640:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 642:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 643:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 644:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvGetNextExpireTime( BaseType_t * const pxListWasEmpty )
 645:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  27              		.loc 1 645 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 646:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 647:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 648:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Timers are listed in expiry time order, with the head of the list
 649:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	referencing the task that will expire first.  Obtain the time at which
 650:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	the timer with the nearest expiry time will expire.  If there are no
 651:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	active timers then just set the next expire time to 0.  That will cause
 652:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	this task to unblock when the tick count overflows, at which point the
 653:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	timer lists will be switched and the next expiry time can be
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 13


 654:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	re-assessed.  */
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
  33              		.loc 1 655 0
  34 0000 064B     		ldr	r3, .L6
  35 0002 1A68     		ldr	r2, [r3]
  36 0004 1368     		ldr	r3, [r2]
  37 0006 2BB9     		cbnz	r3, .L4
  38 0008 0123     		movs	r3, #1
  39              	.L2:
  40              		.loc 1 655 0 is_stmt 0 discriminator 4
  41 000a 0360     		str	r3, [r0]
 656:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  42              		.loc 1 656 0 is_stmt 1 discriminator 4
  43 000c 23B9     		cbnz	r3, .L5
 657:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 658:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
  44              		.loc 1 658 0
  45 000e D368     		ldr	r3, [r2, #12]
  46 0010 1868     		ldr	r0, [r3]
  47              	.LVL1:
  48 0012 7047     		bx	lr
  49              	.LVL2:
  50              	.L4:
 655:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( *pxListWasEmpty == pdFALSE )
  51              		.loc 1 655 0
  52 0014 0023     		movs	r3, #0
  53 0016 F8E7     		b	.L2
  54              	.L5:
 659:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 660:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 661:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 662:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Ensure the task unblocks when the tick count rolls over. */
 663:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = ( TickType_t ) 0U;
  55              		.loc 1 663 0
  56 0018 0020     		movs	r0, #0
  57              	.LVL3:
 664:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 665:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 666:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xNextExpireTime;
 667:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
  58              		.loc 1 667 0
  59 001a 7047     		bx	lr
  60              	.L7:
  61              		.align	2
  62              	.L6:
  63 001c 00000000 		.word	.LANCHOR0
  64              		.cfi_endproc
  65              	.LFE19:
  67              		.section	.text.prvInsertTimerInActiveList,"ax",%progbits
  68              		.align	1
  69              		.syntax unified
  70              		.thumb
  71              		.thumb_func
  72              		.fpu fpv4-sp-d16
  74              	prvInsertTimerInActiveList:
  75              	.LFB21:
 668:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 14


 669:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 670:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static TickType_t prvSampleTimeNow( BaseType_t * const pxTimerListsWereSwitched )
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 672:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 673:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** PRIVILEGED_DATA static TickType_t xLastTime = ( TickType_t ) 0U; /*lint !e956 Variable is only acce
 674:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xTimeNow = xTaskGetTickCount();
 676:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xTimeNow < xLastTime )
 678:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		prvSwitchTimerLists();
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 681:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 682:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 683:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdFALSE;
 685:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 686:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xLastTime = xTimeNow;
 688:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 689:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimeNow;
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 691:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 692:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 693:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static BaseType_t prvInsertTimerInActiveList( Timer_t * const pxTimer, const TickType_t xNextExpiry
 694:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
  76              		.loc 1 694 0
  77              		.cfi_startproc
  78              		@ args = 0, pretend = 0, frame = 0
  79              		@ frame_needed = 0, uses_anonymous_args = 0
  80              	.LVL4:
  81 0000 08B5     		push	{r3, lr}
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
  86              	.LVL5:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xProcessTimerNow = pdFALSE;
 696:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 697:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
  87              		.loc 1 697 0
  88 0002 4160     		str	r1, [r0, #4]
 698:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
  89              		.loc 1 698 0
  90 0004 0061     		str	r0, [r0, #16]
 699:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 700:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	if( xNextExpiryTime <= xTimeNow )
  91              		.loc 1 700 0
  92 0006 9142     		cmp	r1, r2
  93 0008 0CD8     		bhi	.L9
 701:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 702:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Has the expiry time elapsed between the command to start/reset a
 703:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		timer was issued, and the time the command was processed? */
 704:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961
  94              		.loc 1 704 0
  95 000a D21A     		subs	r2, r2, r3
  96              	.LVL6:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 15


  97 000c 8369     		ldr	r3, [r0, #24]
  98              	.LVL7:
  99 000e 9A42     		cmp	r2, r3
 100 0010 01D3     		bcc	.L15
 705:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 706:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The time between a command being issued and the command being
 707:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed actually exceeds the timers period.  */
 708:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 101              		.loc 1 708 0
 102 0012 0120     		movs	r0, #1
 103              	.LVL8:
 104 0014 10E0     		b	.L8
 105              	.LVL9:
 106              	.L15:
 709:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 710:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 711:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 712:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 107              		.loc 1 712 0
 108 0016 011D     		adds	r1, r0, #4
 109              	.LVL10:
 110 0018 094B     		ldr	r3, .L16
 111 001a 1868     		ldr	r0, [r3]
 112              	.LVL11:
 113 001c FFF7FEFF 		bl	vListInsert
 114              	.LVL12:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 115              		.loc 1 695 0
 116 0020 0020     		movs	r0, #0
 117 0022 09E0     		b	.L8
 118              	.LVL13:
 119              	.L9:
 713:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 714:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 715:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	else
 716:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 717:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 120              		.loc 1 717 0
 121 0024 9A42     		cmp	r2, r3
 122 0026 01D2     		bcs	.L11
 123              		.loc 1 717 0 is_stmt 0 discriminator 1
 124 0028 9942     		cmp	r1, r3
 125 002a 06D2     		bcs	.L13
 126              	.L11:
 718:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 719:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* If, since the command was issued, the tick count has overflowed
 720:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			but the expiry time has not, then the timer must have already passed
 721:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			its expiry time and should be processed immediately. */
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xProcessTimerNow = pdTRUE;
 723:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 724:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 725:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 726:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 127              		.loc 1 726 0 is_stmt 1
 128 002c 011D     		adds	r1, r0, #4
 129              	.LVL14:
 130 002e 054B     		ldr	r3, .L16+4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 16


 131              	.LVL15:
 132 0030 1868     		ldr	r0, [r3]
 133              	.LVL16:
 134 0032 FFF7FEFF 		bl	vListInsert
 135              	.LVL17:
 695:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 136              		.loc 1 695 0
 137 0036 0020     		movs	r0, #0
 138              	.LVL18:
 139              	.L8:
 727:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 728:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 729:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xProcessTimerNow;
 731:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 140              		.loc 1 731 0
 141 0038 08BD     		pop	{r3, pc}
 142              	.LVL19:
 143              	.L13:
 722:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 144              		.loc 1 722 0
 145 003a 0120     		movs	r0, #1
 146              	.LVL20:
 730:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 147              		.loc 1 730 0
 148 003c FCE7     		b	.L8
 149              	.L17:
 150 003e 00BF     		.align	2
 151              	.L16:
 152 0040 00000000 		.word	.LANCHOR1
 153 0044 00000000 		.word	.LANCHOR0
 154              		.cfi_endproc
 155              	.LFE21:
 157              		.section	.text.prvCheckForValidListAndQueue,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 162              		.fpu fpv4-sp-d16
 164              	prvCheckForValidListAndQueue:
 165              	.LFB24:
 732:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 733:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 734:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void	prvProcessReceivedCommands( void )
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 736:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 737:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 738:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerListsWereSwitched, xResult;
 739:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 740:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does
 742:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 743:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#if ( INCLUDE_xTimerPendFunctionCall == 1 )
 744:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 745:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Negative commands are pended function calls rather than timer
 746:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			commands. */
 747:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xMessage.xMessageID < ( BaseType_t ) 0 )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 17


 748:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 749:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				const CallbackParameters_t * const pxCallback = &( xMessage.u.xCallbackParameters );
 750:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 751:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer uses the xCallbackParameters member to request a
 752:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				callback be executed.  Check the callback is not NULL. */
 753:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( pxCallback );
 754:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 755:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* Call the function. */
 756:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 757:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 758:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 759:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 760:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 761:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 762:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 763:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		#endif /* INCLUDE_xTimerPendFunctionCall */
 764:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 765:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Commands that are positive are timer commands rather than pended
 766:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		function calls. */
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 768:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 769:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* The messages uses the xTimerParameters member to work on a
 770:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			software timer. */
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 772:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The
 774:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 775:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer is in a list, remove it. */
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 777:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 778:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 779:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 780:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				mtCOVERAGE_TEST_MARKER();
 781:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 782:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 783:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			traceTIMER_COMMAND_RECEIVED( pxTimer, xMessage.xMessageID, xMessage.u.xTimerParameters.xMessageV
 784:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 785:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* In this case the xTimerListsWereSwitched parameter is not used, but
 786:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			it must be present in the function call.  prvSampleTimeNow() must be
 787:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			called after the message is received from xTimerQueue so there is no
 788:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			possibility of a higher priority task adding a message to the message
 789:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			queue with a time that is ahead of the timer daemon task (because it
 790:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pre-empted the timer daemon task after the xTimeNow value was set). */
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimeNow = prvSampleTimeNow( &xTimerListsWereSwitched );
 792:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			switch( xMessage.xMessageID )
 794:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 795:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START :
 796:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_FROM_ISR :
 797:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET :
 798:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_RESET_FROM_ISR :
 799:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_START_DONT_TRACE :
 800:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Start or restart a timer. */
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 803:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 804:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer expired before it was added to the active
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 18


 805:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						timer list.  Process it now. */
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 807:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 808:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 810:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParam
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 813:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 814:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 815:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 816:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 817:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							mtCOVERAGE_TEST_MARKER();
 818:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 819:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 820:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					else
 821:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 822:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						mtCOVERAGE_TEST_MARKER();
 823:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 824:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 825:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 826:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP :
 827:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_STOP_FROM_ISR :
 828:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The timer has already been removed from the active list. */
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 831:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 832:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD :
 833:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_CHANGE_PERIOD_FROM_ISR :
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 837:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 838:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* The new period does not really have a reference, and can
 839:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be longer or shorter than the old one.  The command time is
 840:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					therefore set to the current time, and as the period cannot
 841:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					be zero the next expiry time can only be in the future,
 842:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					meaning (unlike for the xTimerStart() case above) there is
 843:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					no fail case that needs to be handled here. */
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTi
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 846:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 847:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				case tmrCOMMAND_DELETE :
 848:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#if ( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 849:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 850:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* The timer has already been removed from the active list,
 851:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						just free up the memory if the memory was dynamically
 852:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						allocated. */
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 854:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							vPortFree( pxTimer );
 856:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 857:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						else
 858:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 860:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 861:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 19


 862:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#else
 863:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 864:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						/* If dynamic allocation is not enabled, the memory
 865:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						could not have been dynamically allocated. So there is
 866:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						no need to free the memory - just mark the timer as
 867:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						"not active". */
 868:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 869:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					}
 870:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 871:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 872:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 873:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				default	:
 874:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					/* Don't expect to get here. */
 875:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 876:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 877:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 878:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 880:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 881:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvSwitchTimerLists( void )
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 884:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 885:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** List_t *pxTemp;
 886:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer;
 887:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 888:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 889:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* The tick count has overflowed.  The timer lists must be switched.
 890:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	If there are any timers still referenced from the current timer list
 891:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	then they must have expired and should be processed before the lists
 892:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	are switched. */
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 894:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 896:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 897:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Remove the timer from the list. */
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 v
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 900:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 901:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 902:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Execute its callback, then send a command to restart the timer if
 903:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		it is an auto-reload timer.  It cannot be restarted here as the lists
 904:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		have not yet been switched. */
 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 906:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 908:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 909:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			/* Calculate the reload value, and if the reload value results in
 910:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the timer going into the same timer list then it has already expired
 911:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			and the timer should be re-inserted into the current list so it is
 912:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			processed again within this loop.  Otherwise a command should be sent
 913:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			to restart the timer to ensure it is only inserted into a list after
 914:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			the lists have been swapped. */
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 917:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 20


 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 921:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 922:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			else
 923:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tm
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 926:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 927:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 928:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 929:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 930:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 931:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 932:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 933:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 934:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 935:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxTemp = pxCurrentTimerList;
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxCurrentTimerList = pxOverflowTimerList;
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 939:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 940:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 941:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** static void prvCheckForValidListAndQueue( void )
 942:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 166              		.loc 1 942 0
 167              		.cfi_startproc
 168              		@ args = 0, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170 0000 30B5     		push	{r4, r5, lr}
 171              	.LCFI1:
 172              		.cfi_def_cfa_offset 12
 173              		.cfi_offset 4, -12
 174              		.cfi_offset 5, -8
 175              		.cfi_offset 14, -4
 176 0002 83B0     		sub	sp, sp, #12
 177              	.LCFI2:
 178              		.cfi_def_cfa_offset 24
 943:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Check that the list from which active timers are referenced, and the
 944:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	queue used to communicate with the timer service, have been
 945:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	initialised. */
 946:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 179              		.loc 1 946 0
 180 0004 FFF7FEFF 		bl	vPortEnterCritical
 181              	.LVL21:
 947:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 948:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerQueue == NULL )
 182              		.loc 1 948 0
 183 0008 114B     		ldr	r3, .L22
 184 000a 1B68     		ldr	r3, [r3]
 185 000c 1BB1     		cbz	r3, .L21
 186              	.L19:
 949:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList1 );
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 954:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 21


 955:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 956:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 957:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				/* The timer queue is allocated statically in case
 958:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
 959:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent ad
 960:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonT
 961:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) siz
 963:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 964:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#else
 965:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 966:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				xTimerQueue = xQueueCreate( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, sizeof( DaemonTaskMessage
 967:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 968:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif
 969:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 970:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#if ( configQUEUE_REGISTRY_SIZE > 0 )
 971:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				if( xTimerQueue != NULL )
 973:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 975:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 976:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				else
 977:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 978:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					mtCOVERAGE_TEST_MARKER();
 979:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 980:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 981:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			#endif /* configQUEUE_REGISTRY_SIZE */
 982:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 983:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
 984:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 985:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			mtCOVERAGE_TEST_MARKER();
 986:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 987:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 988:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 187              		.loc 1 988 0
 188 000e FFF7FEFF 		bl	vPortExitCritical
 189              	.LVL22:
 989:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 190              		.loc 1 989 0
 191 0012 03B0     		add	sp, sp, #12
 192              	.LCFI3:
 193              		.cfi_remember_state
 194              		.cfi_def_cfa_offset 12
 195              		@ sp needed
 196 0014 30BD     		pop	{r4, r5, pc}
 197              	.L21:
 198              	.LCFI4:
 199              		.cfi_restore_state
 950:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			vListInitialise( &xActiveTimerList2 );
 200              		.loc 1 950 0
 201 0016 0F4D     		ldr	r5, .L22+4
 202 0018 2846     		mov	r0, r5
 203 001a FFF7FEFF 		bl	vListInitialise
 204              	.LVL23:
 951:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxCurrentTimerList = &xActiveTimerList1;
 205              		.loc 1 951 0
 206 001e 0E4C     		ldr	r4, .L22+8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 22


 207 0020 2046     		mov	r0, r4
 208 0022 FFF7FEFF 		bl	vListInitialise
 209              	.LVL24:
 952:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			pxOverflowTimerList = &xActiveTimerList2;
 210              		.loc 1 952 0
 211 0026 0D4B     		ldr	r3, .L22+12
 212 0028 1D60     		str	r5, [r3]
 953:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 213              		.loc 1 953 0
 214 002a 0D4B     		ldr	r3, .L22+16
 215 002c 1C60     		str	r4, [r3]
 216              	.LBB40:
 962:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 217              		.loc 1 962 0
 218 002e 0023     		movs	r3, #0
 219 0030 0093     		str	r3, [sp]
 220 0032 0C4B     		ldr	r3, .L22+20
 221 0034 0C4A     		ldr	r2, .L22+24
 222 0036 0C21     		movs	r1, #12
 223 0038 0A20     		movs	r0, #10
 224 003a FFF7FEFF 		bl	xQueueGenericCreateStatic
 225              	.LVL25:
 226 003e 044B     		ldr	r3, .L22
 227 0040 1860     		str	r0, [r3]
 228              	.LBE40:
 972:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 229              		.loc 1 972 0
 230 0042 0028     		cmp	r0, #0
 231 0044 E3D0     		beq	.L19
 974:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 232              		.loc 1 974 0
 233 0046 0949     		ldr	r1, .L22+28
 234 0048 FFF7FEFF 		bl	vQueueAddToRegistry
 235              	.LVL26:
 236 004c DFE7     		b	.L19
 237              	.L23:
 238 004e 00BF     		.align	2
 239              	.L22:
 240 0050 00000000 		.word	.LANCHOR2
 241 0054 00000000 		.word	.LANCHOR3
 242 0058 00000000 		.word	.LANCHOR4
 243 005c 00000000 		.word	.LANCHOR0
 244 0060 00000000 		.word	.LANCHOR1
 245 0064 00000000 		.word	.LANCHOR5
 246 0068 00000000 		.word	.LANCHOR6
 247 006c 00000000 		.word	.LC0
 248              		.cfi_endproc
 249              	.LFE24:
 251              		.section	.text.prvInitialiseNewTimer,"ax",%progbits
 252              		.align	1
 253              		.syntax unified
 254              		.thumb
 255              		.thumb_func
 256              		.fpu fpv4-sp-d16
 258              	prvInitialiseNewTimer:
 259              	.LFB8:
 355:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* 0 is not a valid value for xTimerPeriodInTicks. */
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 23


 260              		.loc 1 355 0
 261              		.cfi_startproc
 262              		@ args = 8, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              	.LVL27:
 265 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 266              	.LCFI5:
 267              		.cfi_def_cfa_offset 24
 268              		.cfi_offset 4, -24
 269              		.cfi_offset 5, -20
 270              		.cfi_offset 6, -16
 271              		.cfi_offset 7, -12
 272              		.cfi_offset 8, -8
 273              		.cfi_offset 14, -4
 274 0004 079C     		ldr	r4, [sp, #28]
 357:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 275              		.loc 1 357 0
 276 0006 41B9     		cbnz	r1, .L25
 277              	.LBB41:
 278              	.LBB42:
 279              		.file 2 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h"
   1:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.3.1
   3:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2020 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 24


  37:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 25


  94:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 26


 151:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 280              		.loc 2 195 0
 281              		.syntax unified
 282              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 283 0008 4FF05003 			mov r3, #80												
 284 000c 83F31188 		msr basepri, r3											
 285 0010 BFF36F8F 		isb														
 286 0014 BFF34F8F 		dsb														
 287              	
 288              	@ 0 "" 2
 289              	.LVL28:
 290              		.thumb
 291              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 27


 292              	.L26:
 293 0018 FEE7     		b	.L26
 294              	.LVL29:
 295              	.L25:
 296 001a 0F46     		mov	r7, r1
 297              	.LBE42:
 298              	.LBE41:
 359:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 299              		.loc 1 359 0
 300 001c A4B1     		cbz	r4, .L24
 301 001e 1E46     		mov	r6, r3
 302 0020 1546     		mov	r5, r2
 303 0022 8046     		mov	r8, r0
 363:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 304              		.loc 1 363 0
 305 0024 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 306              	.LVL30:
 367:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->xTimerPeriodInTicks = xTimerPeriodInTicks;
 307              		.loc 1 367 0
 308 0028 C4F80080 		str	r8, [r4]
 368:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pvTimerID = pvTimerID;
 309              		.loc 1 368 0
 310 002c A761     		str	r7, [r4, #24]
 369:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer->pxCallbackFunction = pxCallbackFunction;
 311              		.loc 1 369 0
 312 002e E661     		str	r6, [r4, #28]
 370:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		vListInitialiseItem( &( pxNewTimer->xTimerListItem ) );
 313              		.loc 1 370 0
 314 0030 069B     		ldr	r3, [sp, #24]
 315 0032 2362     		str	r3, [r4, #32]
 371:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( uxAutoReload != pdFALSE )
 316              		.loc 1 371 0
 317 0034 201D     		adds	r0, r4, #4
 318 0036 FFF7FEFF 		bl	vListInitialiseItem
 319              	.LVL31:
 372:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 320              		.loc 1 372 0
 321 003a 2DB1     		cbz	r5, .L24
 374:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 322              		.loc 1 374 0
 323 003c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 324 0040 43F00403 		orr	r3, r3, #4
 325 0044 84F82830 		strb	r3, [r4, #40]
 326              	.LVL32:
 327              	.L24:
 378:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 328              		.loc 1 378 0
 329 0048 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 330              		.cfi_endproc
 331              	.LFE8:
 333              		.section	.text.xTimerCreateTimerTask,"ax",%progbits
 334              		.align	1
 335              		.global	xTimerCreateTimerTask
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 339              		.fpu fpv4-sp-d16
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 28


 341              	xTimerCreateTimerTask:
 342              	.LFB5:
 228:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 343              		.loc 1 228 0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 16
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347 0000 10B5     		push	{r4, lr}
 348              	.LCFI6:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 4, -8
 351              		.cfi_offset 14, -4
 352 0002 88B0     		sub	sp, sp, #32
 353              	.LCFI7:
 354              		.cfi_def_cfa_offset 40
 355              	.LVL33:
 235:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 356              		.loc 1 235 0
 357 0004 FFF7FEFF 		bl	prvCheckForValidListAndQueue
 358              	.LVL34:
 237:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 359              		.loc 1 237 0
 360 0008 124B     		ldr	r3, .L35
 361 000a 1B68     		ldr	r3, [r3]
 362 000c CBB1     		cbz	r3, .L30
 363              	.LBB43:
 241:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			StackType_t *pxTimerTaskStackBuffer = NULL;
 364              		.loc 1 241 0
 365 000e 0024     		movs	r4, #0
 366 0010 0594     		str	r4, [sp, #20]
 242:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			uint32_t ulTimerTaskStackSize;
 367              		.loc 1 242 0
 368 0012 0694     		str	r4, [sp, #24]
 245:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 369              		.loc 1 245 0
 370 0014 07AA     		add	r2, sp, #28
 371 0016 06A9     		add	r1, sp, #24
 372 0018 05A8     		add	r0, sp, #20
 373 001a FFF7FEFF 		bl	vApplicationGetTimerTaskMemory
 374              	.LVL35:
 246:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 													configTIMER_SERVICE_TASK_NAME,
 375              		.loc 1 246 0
 376 001e 059B     		ldr	r3, [sp, #20]
 377 0020 0293     		str	r3, [sp, #8]
 378 0022 069B     		ldr	r3, [sp, #24]
 379 0024 0193     		str	r3, [sp, #4]
 380 0026 0223     		movs	r3, #2
 381 0028 0093     		str	r3, [sp]
 382 002a 2346     		mov	r3, r4
 383 002c 079A     		ldr	r2, [sp, #28]
 384 002e 0A49     		ldr	r1, .L35+4
 385 0030 0A48     		ldr	r0, .L35+8
 386 0032 FFF7FEFF 		bl	xTaskCreateStatic
 387              	.LVL36:
 388 0036 0A4B     		ldr	r3, .L35+12
 389 0038 1860     		str	r0, [r3]
 254:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 29


 390              		.loc 1 254 0
 391 003a 10B1     		cbz	r0, .L30
 392              	.LBE43:
 277:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 393              		.loc 1 277 0
 394 003c 0120     		movs	r0, #1
 395 003e 08B0     		add	sp, sp, #32
 396              	.LCFI8:
 397              		.cfi_remember_state
 398              		.cfi_def_cfa_offset 8
 399              		@ sp needed
 400 0040 10BD     		pop	{r4, pc}
 401              	.L30:
 402              	.LCFI9:
 403              		.cfi_restore_state
 404              	.LBB44:
 405              	.LBB45:
 406              		.loc 2 195 0
 407              		.syntax unified
 408              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 409 0042 4FF05003 			mov r3, #80												
 410 0046 83F31188 		msr basepri, r3											
 411 004a BFF36F8F 		isb														
 412 004e BFF34F8F 		dsb														
 413              	
 414              	@ 0 "" 2
 415              	.LVL37:
 416              		.thumb
 417              		.syntax unified
 418              	.L32:
 419 0052 FEE7     		b	.L32
 420              	.L36:
 421              		.align	2
 422              	.L35:
 423 0054 00000000 		.word	.LANCHOR2
 424 0058 00000000 		.word	.LC1
 425 005c 00000000 		.word	prvTimerTask
 426 0060 00000000 		.word	.LANCHOR7
 427              	.LBE45:
 428              	.LBE44:
 429              		.cfi_endproc
 430              	.LFE5:
 432              		.section	.text.xTimerCreate,"ax",%progbits
 433              		.align	1
 434              		.global	xTimerCreate
 435              		.syntax unified
 436              		.thumb
 437              		.thumb_func
 438              		.fpu fpv4-sp-d16
 440              	xTimerCreate:
 441              	.LFB6:
 287:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 442              		.loc 1 287 0
 443              		.cfi_startproc
 444              		@ args = 4, pretend = 0, frame = 0
 445              		@ frame_needed = 0, uses_anonymous_args = 0
 446              	.LVL38:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 30


 447 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 448              	.LCFI10:
 449              		.cfi_def_cfa_offset 24
 450              		.cfi_offset 4, -24
 451              		.cfi_offset 5, -20
 452              		.cfi_offset 6, -16
 453              		.cfi_offset 7, -12
 454              		.cfi_offset 8, -8
 455              		.cfi_offset 14, -4
 456 0004 82B0     		sub	sp, sp, #8
 457              	.LCFI11:
 458              		.cfi_def_cfa_offset 32
 459 0006 0546     		mov	r5, r0
 460 0008 0E46     		mov	r6, r1
 461 000a 1746     		mov	r7, r2
 462 000c 9846     		mov	r8, r3
 290:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 463              		.loc 1 290 0
 464 000e 2C20     		movs	r0, #44
 465              	.LVL39:
 466 0010 FFF7FEFF 		bl	pvPortMalloc
 467              	.LVL40:
 292:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 468              		.loc 1 292 0
 469 0014 0446     		mov	r4, r0
 470 0016 58B1     		cbz	r0, .L37
 297:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			prvInitialiseNewTimer( pcTimerName, xTimerPeriodInTicks, uxAutoReload, pvTimerID, pxCallbackFunc
 471              		.loc 1 297 0
 472 0018 0023     		movs	r3, #0
 473 001a 80F82830 		strb	r3, [r0, #40]
 298:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 474              		.loc 1 298 0
 475 001e 0190     		str	r0, [sp, #4]
 476 0020 089B     		ldr	r3, [sp, #32]
 477 0022 0093     		str	r3, [sp]
 478 0024 4346     		mov	r3, r8
 479 0026 3A46     		mov	r2, r7
 480 0028 3146     		mov	r1, r6
 481 002a 2846     		mov	r0, r5
 482              	.LVL41:
 483 002c FFF7FEFF 		bl	prvInitialiseNewTimer
 484              	.LVL42:
 485              	.L37:
 302:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 486              		.loc 1 302 0
 487 0030 2046     		mov	r0, r4
 488 0032 02B0     		add	sp, sp, #8
 489              	.LCFI12:
 490              		.cfi_def_cfa_offset 24
 491              		@ sp needed
 492 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 493              		.cfi_endproc
 494              	.LFE6:
 496              		.section	.text.xTimerCreateStatic,"ax",%progbits
 497              		.align	1
 498              		.global	xTimerCreateStatic
 499              		.syntax unified
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 31


 500              		.thumb
 501              		.thumb_func
 502              		.fpu fpv4-sp-d16
 504              	xTimerCreateStatic:
 505              	.LFB7:
 315:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	Timer_t *pxNewTimer;
 506              		.loc 1 315 0
 507              		.cfi_startproc
 508              		@ args = 8, pretend = 0, frame = 8
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              	.LVL43:
 511 0000 30B5     		push	{r4, r5, lr}
 512              	.LCFI13:
 513              		.cfi_def_cfa_offset 12
 514              		.cfi_offset 4, -12
 515              		.cfi_offset 5, -8
 516              		.cfi_offset 14, -4
 517 0002 85B0     		sub	sp, sp, #20
 518              	.LCFI14:
 519              		.cfi_def_cfa_offset 32
 520 0004 099C     		ldr	r4, [sp, #36]
 521              	.LBB46:
 323:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xSize == sizeof( Timer_t ) );
 522              		.loc 1 323 0
 523 0006 2C25     		movs	r5, #44
 524 0008 0395     		str	r5, [sp, #12]
 324:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 525              		.loc 1 324 0
 526 000a 039D     		ldr	r5, [sp, #12]
 527 000c 2C2D     		cmp	r5, #44
 528 000e 08D0     		beq	.L41
 529              	.LBB47:
 530              	.LBB48:
 531              		.loc 2 195 0
 532              		.syntax unified
 533              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 534 0010 4FF05003 			mov r3, #80												
 535 0014 83F31188 		msr basepri, r3											
 536 0018 BFF36F8F 		isb														
 537 001c BFF34F8F 		dsb														
 538              	
 539              	@ 0 "" 2
 540              	.LVL44:
 541              		.thumb
 542              		.syntax unified
 543              	.L42:
 544 0020 FEE7     		b	.L42
 545              	.LVL45:
 546              	.L41:
 547              	.LBE48:
 548              	.LBE47:
 325:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 549              		.loc 1 325 0
 550 0022 039D     		ldr	r5, [sp, #12]
 551              	.LBE46:
 330:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxNewTimer = ( Timer_t * ) pxTimerBuffer; /*lint !e740 !e9087 StaticTimer_t is a pointer to a Tim
 552              		.loc 1 330 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 32


 553 0024 44B9     		cbnz	r4, .L43
 554              	.LBB49:
 555              	.LBB50:
 556              		.loc 2 195 0
 557              		.syntax unified
 558              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 559 0026 4FF05003 			mov r3, #80												
 560 002a 83F31188 		msr basepri, r3											
 561 002e BFF36F8F 		isb														
 562 0032 BFF34F8F 		dsb														
 563              	
 564              	@ 0 "" 2
 565              	.LVL46:
 566              		.thumb
 567              		.syntax unified
 568              	.L44:
 569 0036 FEE7     		b	.L44
 570              	.LVL47:
 571              	.L43:
 572              	.LBE50:
 573              	.LBE49:
 338:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 574              		.loc 1 338 0
 575 0038 0225     		movs	r5, #2
 576 003a 84F82850 		strb	r5, [r4, #40]
 340:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 577              		.loc 1 340 0
 578 003e 0194     		str	r4, [sp, #4]
 579 0040 089D     		ldr	r5, [sp, #32]
 580 0042 0095     		str	r5, [sp]
 581 0044 FFF7FEFF 		bl	prvInitialiseNewTimer
 582              	.LVL48:
 344:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 583              		.loc 1 344 0
 584 0048 2046     		mov	r0, r4
 585 004a 05B0     		add	sp, sp, #20
 586              	.LCFI15:
 587              		.cfi_def_cfa_offset 12
 588              		@ sp needed
 589 004c 30BD     		pop	{r4, r5, pc}
 590              		.cfi_endproc
 591              	.LFE7:
 593              		.section	.text.xTimerGenericCommand,"ax",%progbits
 594              		.align	1
 595              		.global	xTimerGenericCommand
 596              		.syntax unified
 597              		.thumb
 598              		.thumb_func
 599              		.fpu fpv4-sp-d16
 601              	xTimerGenericCommand:
 602              	.LFB9:
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 603              		.loc 1 382 0
 604              		.cfi_startproc
 605              		@ args = 4, pretend = 0, frame = 16
 606              		@ frame_needed = 0, uses_anonymous_args = 0
 607              	.LVL49:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 33


 386:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 608              		.loc 1 386 0
 609 0000 C8B1     		cbz	r0, .L55
 382:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn = pdFAIL;
 610              		.loc 1 382 0
 611 0002 30B5     		push	{r4, r5, lr}
 612              	.LCFI16:
 613              		.cfi_def_cfa_offset 12
 614              		.cfi_offset 4, -12
 615              		.cfi_offset 5, -8
 616              		.cfi_offset 14, -4
 617 0004 85B0     		sub	sp, sp, #20
 618              	.LCFI17:
 619              		.cfi_def_cfa_offset 32
 620 0006 1546     		mov	r5, r2
 621 0008 0446     		mov	r4, r0
 390:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 622              		.loc 1 390 0
 623 000a 174A     		ldr	r2, .L57
 624              	.LVL50:
 625 000c 1068     		ldr	r0, [r2]
 626              	.LVL51:
 627 000e 40B3     		cbz	r0, .L52
 628 0010 1A46     		mov	r2, r3
 393:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 629              		.loc 1 393 0
 630 0012 0191     		str	r1, [sp, #4]
 394:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xTimerParameters.pxTimer = xTimer;
 631              		.loc 1 394 0
 632 0014 0295     		str	r5, [sp, #8]
 395:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 633              		.loc 1 395 0
 634 0016 0394     		str	r4, [sp, #12]
 397:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 635              		.loc 1 397 0
 636 0018 0529     		cmp	r1, #5
 637 001a 1DDC     		bgt	.L50
 399:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 638              		.loc 1 399 0
 639 001c FFF7FEFF 		bl	xTaskGetSchedulerState
 640              	.LVL52:
 641 0020 0228     		cmp	r0, #2
 642 0022 11D0     		beq	.L56
 405:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 643              		.loc 1 405 0
 644 0024 0023     		movs	r3, #0
 645 0026 1A46     		mov	r2, r3
 646 0028 01A9     		add	r1, sp, #4
 647 002a 0F48     		ldr	r0, .L57
 648 002c 0068     		ldr	r0, [r0]
 649 002e FFF7FEFF 		bl	xQueueGenericSend
 650              	.LVL53:
 651              	.L46:
 421:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 652              		.loc 1 421 0
 653 0032 05B0     		add	sp, sp, #20
 654              	.LCFI18:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 34


 655              		.cfi_def_cfa_offset 12
 656              		@ sp needed
 657 0034 30BD     		pop	{r4, r5, pc}
 658              	.LVL54:
 659              	.L55:
 660              	.LCFI19:
 661              		.cfi_def_cfa_offset 0
 662              		.cfi_restore 4
 663              		.cfi_restore 5
 664              		.cfi_restore 14
 665              	.LBB51:
 666              	.LBB52:
 667              		.loc 2 195 0
 668              		.syntax unified
 669              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 670 0036 4FF05003 			mov r3, #80												
 671 003a 83F31188 		msr basepri, r3											
 672 003e BFF36F8F 		isb														
 673 0042 BFF34F8F 		dsb														
 674              	
 675              	@ 0 "" 2
 676              	.LVL55:
 677              		.thumb
 678              		.syntax unified
 679              	.L48:
 680 0046 FEE7     		b	.L48
 681              	.LVL56:
 682              	.L56:
 683              	.LCFI20:
 684              		.cfi_def_cfa_offset 32
 685              		.cfi_offset 4, -12
 686              		.cfi_offset 5, -8
 687              		.cfi_offset 14, -4
 688              	.LBE52:
 689              	.LBE51:
 401:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 690              		.loc 1 401 0
 691 0048 0023     		movs	r3, #0
 692 004a 089A     		ldr	r2, [sp, #32]
 693 004c 01A9     		add	r1, sp, #4
 694 004e 0648     		ldr	r0, .L57
 695 0050 0068     		ldr	r0, [r0]
 696 0052 FFF7FEFF 		bl	xQueueGenericSend
 697              	.LVL57:
 698 0056 ECE7     		b	.L46
 699              	.LVL58:
 700              	.L50:
 410:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 701              		.loc 1 410 0
 702 0058 0023     		movs	r3, #0
 703 005a 01A9     		add	r1, sp, #4
 704              	.LVL59:
 705 005c FFF7FEFF 		bl	xQueueGenericSendFromISR
 706              	.LVL60:
 707 0060 E7E7     		b	.L46
 708              	.LVL61:
 709              	.L52:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 35


 383:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 710              		.loc 1 383 0
 711 0062 0020     		movs	r0, #0
 420:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 712              		.loc 1 420 0
 713 0064 E5E7     		b	.L46
 714              	.L58:
 715 0066 00BF     		.align	2
 716              	.L57:
 717 0068 00000000 		.word	.LANCHOR2
 718              		.cfi_endproc
 719              	.LFE9:
 721              		.section	.text.prvSwitchTimerLists,"ax",%progbits
 722              		.align	1
 723              		.syntax unified
 724              		.thumb
 725              		.thumb_func
 726              		.fpu fpv4-sp-d16
 728              	prvSwitchTimerLists:
 729              	.LFB23:
 883:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime, xReloadTime;
 730              		.loc 1 883 0
 731              		.cfi_startproc
 732              		@ args = 0, pretend = 0, frame = 0
 733              		@ frame_needed = 0, uses_anonymous_args = 0
 734 0000 70B5     		push	{r4, r5, r6, lr}
 735              	.LCFI21:
 736              		.cfi_def_cfa_offset 16
 737              		.cfi_offset 4, -16
 738              		.cfi_offset 5, -12
 739              		.cfi_offset 6, -8
 740              		.cfi_offset 14, -4
 741 0002 82B0     		sub	sp, sp, #8
 742              	.LCFI22:
 743              		.cfi_def_cfa_offset 24
 744              	.L61:
 893:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 745              		.loc 1 893 0
 746 0004 1B4B     		ldr	r3, .L68
 747 0006 1B68     		ldr	r3, [r3]
 748 0008 1A68     		ldr	r2, [r3]
 749 000a 62B3     		cbz	r2, .L67
 895:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 750              		.loc 1 895 0
 751 000c DB68     		ldr	r3, [r3, #12]
 752 000e 1E68     		ldr	r6, [r3]
 753              	.LVL62:
 898:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 754              		.loc 1 898 0
 755 0010 DC68     		ldr	r4, [r3, #12]
 756              	.LVL63:
 899:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		traceTIMER_EXPIRED( pxTimer );
 757              		.loc 1 899 0
 758 0012 251D     		adds	r5, r4, #4
 759 0014 2846     		mov	r0, r5
 760 0016 FFF7FEFF 		bl	uxListRemove
 761              	.LVL64:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 36


 905:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 762              		.loc 1 905 0
 763 001a 236A     		ldr	r3, [r4, #32]
 764 001c 2046     		mov	r0, r4
 765 001e 9847     		blx	r3
 766              	.LVL65:
 907:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 767              		.loc 1 907 0
 768 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 769 0024 13F0040F 		tst	r3, #4
 770 0028 ECD0     		beq	.L61
 915:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			if( xReloadTime > xNextExpireTime )
 771              		.loc 1 915 0
 772 002a A369     		ldr	r3, [r4, #24]
 773 002c 3344     		add	r3, r3, r6
 774              	.LVL66:
 916:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 775              		.loc 1 916 0
 776 002e 9E42     		cmp	r6, r3
 777 0030 07D2     		bcs	.L62
 918:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 778              		.loc 1 918 0
 779 0032 6360     		str	r3, [r4, #4]
 919:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 780              		.loc 1 919 0
 781 0034 2461     		str	r4, [r4, #16]
 920:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 782              		.loc 1 920 0
 783 0036 2946     		mov	r1, r5
 784 0038 0E4B     		ldr	r3, .L68
 785              	.LVL67:
 786 003a 1868     		ldr	r0, [r3]
 787 003c FFF7FEFF 		bl	vListInsert
 788              	.LVL68:
 789 0040 E0E7     		b	.L61
 790              	.LVL69:
 791              	.L62:
 924:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				configASSERT( xResult );
 792              		.loc 1 924 0
 793 0042 0021     		movs	r1, #0
 794 0044 0091     		str	r1, [sp]
 795 0046 0B46     		mov	r3, r1
 796              	.LVL70:
 797 0048 3246     		mov	r2, r6
 798 004a 2046     		mov	r0, r4
 799 004c FFF7FEFF 		bl	xTimerGenericCommand
 800              	.LVL71:
 925:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				( void ) xResult;
 801              		.loc 1 925 0
 802 0050 0028     		cmp	r0, #0
 803 0052 D7D1     		bne	.L61
 804              	.LBB53:
 805              	.LBB54:
 806              		.loc 2 195 0
 807              		.syntax unified
 808              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 809 0054 4FF05003 			mov r3, #80												
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 37


 810 0058 83F31188 		msr basepri, r3											
 811 005c BFF36F8F 		isb														
 812 0060 BFF34F8F 		dsb														
 813              	
 814              	@ 0 "" 2
 815              	.LVL72:
 816              		.thumb
 817              		.syntax unified
 818              	.L64:
 819 0064 FEE7     		b	.L64
 820              	.LVL73:
 821              	.L67:
 822              	.LBE54:
 823              	.LBE53:
 936:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	pxOverflowTimerList = pxTemp;
 824              		.loc 1 936 0
 825 0066 044A     		ldr	r2, .L68+4
 826 0068 1068     		ldr	r0, [r2]
 827 006a 0249     		ldr	r1, .L68
 828 006c 0860     		str	r0, [r1]
 937:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 829              		.loc 1 937 0
 830 006e 1360     		str	r3, [r2]
 938:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 831              		.loc 1 938 0
 832 0070 02B0     		add	sp, sp, #8
 833              	.LCFI23:
 834              		.cfi_def_cfa_offset 16
 835              		@ sp needed
 836 0072 70BD     		pop	{r4, r5, r6, pc}
 837              	.L69:
 838              		.align	2
 839              	.L68:
 840 0074 00000000 		.word	.LANCHOR0
 841 0078 00000000 		.word	.LANCHOR1
 842              		.cfi_endproc
 843              	.LFE23:
 845              		.section	.text.prvSampleTimeNow,"ax",%progbits
 846              		.align	1
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu fpv4-sp-d16
 852              	prvSampleTimeNow:
 853              	.LFB20:
 671:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 854              		.loc 1 671 0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 0
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 858              	.LVL74:
 859 0000 38B5     		push	{r3, r4, r5, lr}
 860              	.LCFI24:
 861              		.cfi_def_cfa_offset 16
 862              		.cfi_offset 3, -16
 863              		.cfi_offset 4, -12
 864              		.cfi_offset 5, -8
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 38


 865              		.cfi_offset 14, -4
 866 0002 0546     		mov	r5, r0
 675:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 867              		.loc 1 675 0
 868 0004 FFF7FEFF 		bl	xTaskGetTickCount
 869              	.LVL75:
 870 0008 0446     		mov	r4, r0
 871              	.LVL76:
 677:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 872              		.loc 1 677 0
 873 000a 074B     		ldr	r3, .L75
 874 000c 1B68     		ldr	r3, [r3]
 875 000e 8342     		cmp	r3, r0
 876 0010 05D8     		bhi	.L74
 684:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 877              		.loc 1 684 0
 878 0012 0023     		movs	r3, #0
 879 0014 2B60     		str	r3, [r5]
 880              	.LVL77:
 881              	.L72:
 687:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 882              		.loc 1 687 0
 883 0016 044B     		ldr	r3, .L75
 884 0018 1C60     		str	r4, [r3]
 690:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 885              		.loc 1 690 0
 886 001a 2046     		mov	r0, r4
 887 001c 38BD     		pop	{r3, r4, r5, pc}
 888              	.LVL78:
 889              	.L74:
 679:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		*pxTimerListsWereSwitched = pdTRUE;
 890              		.loc 1 679 0
 891 001e FFF7FEFF 		bl	prvSwitchTimerLists
 892              	.LVL79:
 680:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 893              		.loc 1 680 0
 894 0022 0123     		movs	r3, #1
 895 0024 2B60     		str	r3, [r5]
 896 0026 F6E7     		b	.L72
 897              	.L76:
 898              		.align	2
 899              	.L75:
 900 0028 00000000 		.word	.LANCHOR8
 901              		.cfi_endproc
 902              	.LFE20:
 904              		.section	.text.prvProcessExpiredTimer,"ax",%progbits
 905              		.align	1
 906              		.syntax unified
 907              		.thumb
 908              		.thumb_func
 909              		.fpu fpv4-sp-d16
 911              	prvProcessExpiredTimer:
 912              	.LFB16:
 508:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xResult;
 913              		.loc 1 508 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 39


 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              	.LVL80:
 918 0000 70B5     		push	{r4, r5, r6, lr}
 919              	.LCFI25:
 920              		.cfi_def_cfa_offset 16
 921              		.cfi_offset 4, -16
 922              		.cfi_offset 5, -12
 923              		.cfi_offset 6, -8
 924              		.cfi_offset 14, -4
 925 0002 82B0     		sub	sp, sp, #8
 926              	.LCFI26:
 927              		.cfi_def_cfa_offset 24
 928 0004 0546     		mov	r5, r0
 929 0006 0E46     		mov	r6, r1
 510:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 930              		.loc 1 510 0
 931 0008 174B     		ldr	r3, .L83
 932 000a 1B68     		ldr	r3, [r3]
 933 000c DB68     		ldr	r3, [r3, #12]
 934 000e DC68     		ldr	r4, [r3, #12]
 935              	.LVL81:
 514:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	traceTIMER_EXPIRED( pxTimer );
 936              		.loc 1 514 0
 937 0010 201D     		adds	r0, r4, #4
 938              	.LVL82:
 939 0012 FFF7FEFF 		bl	uxListRemove
 940              	.LVL83:
 519:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 941              		.loc 1 519 0
 942 0016 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 943 001a 13F0040F 		tst	r3, #4
 944 001e 08D1     		bne	.L82
 539:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		mtCOVERAGE_TEST_MARKER();
 945              		.loc 1 539 0
 946 0020 23F00103 		bic	r3, r3, #1
 947 0024 84F82830 		strb	r3, [r4, #40]
 948              	.L79:
 544:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 949              		.loc 1 544 0
 950 0028 236A     		ldr	r3, [r4, #32]
 951 002a 2046     		mov	r0, r4
 952 002c 9847     		blx	r3
 953              	.LVL84:
 545:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 954              		.loc 1 545 0
 955 002e 02B0     		add	sp, sp, #8
 956              	.LCFI27:
 957              		.cfi_remember_state
 958              		.cfi_def_cfa_offset 16
 959              		@ sp needed
 960 0030 70BD     		pop	{r4, r5, r6, pc}
 961              	.LVL85:
 962              	.L82:
 963              	.LCFI28:
 964              		.cfi_restore_state
 524:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 965              		.loc 1 524 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 40


 966 0032 A169     		ldr	r1, [r4, #24]
 967 0034 2B46     		mov	r3, r5
 968 0036 3246     		mov	r2, r6
 969 0038 2944     		add	r1, r1, r5
 970 003a 2046     		mov	r0, r4
 971 003c FFF7FEFF 		bl	prvInsertTimerInActiveList
 972              	.LVL86:
 973 0040 0028     		cmp	r0, #0
 974 0042 F1D0     		beq	.L79
 528:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			configASSERT( xResult );
 975              		.loc 1 528 0
 976 0044 0021     		movs	r1, #0
 977 0046 0091     		str	r1, [sp]
 978 0048 0B46     		mov	r3, r1
 979 004a 2A46     		mov	r2, r5
 980 004c 2046     		mov	r0, r4
 981 004e FFF7FEFF 		bl	xTimerGenericCommand
 982              	.LVL87:
 529:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			( void ) xResult;
 983              		.loc 1 529 0
 984 0052 0028     		cmp	r0, #0
 985 0054 E8D1     		bne	.L79
 986              	.LBB55:
 987              	.LBB56:
 988              		.loc 2 195 0
 989              		.syntax unified
 990              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 991 0056 4FF05003 			mov r3, #80												
 992 005a 83F31188 		msr basepri, r3											
 993 005e BFF36F8F 		isb														
 994 0062 BFF34F8F 		dsb														
 995              	
 996              	@ 0 "" 2
 997              	.LVL88:
 998              		.thumb
 999              		.syntax unified
 1000              	.L80:
 1001 0066 FEE7     		b	.L80
 1002              	.L84:
 1003              		.align	2
 1004              	.L83:
 1005 0068 00000000 		.word	.LANCHOR0
 1006              	.LBE56:
 1007              	.LBE55:
 1008              		.cfi_endproc
 1009              	.LFE16:
 1011              		.section	.text.prvProcessTimerOrBlockTask,"ax",%progbits
 1012              		.align	1
 1013              		.syntax unified
 1014              		.thumb
 1015              		.thumb_func
 1016              		.fpu fpv4-sp-d16
 1018              	prvProcessTimerOrBlockTask:
 1019              	.LFB18:
 585:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xTimeNow;
 1020              		.loc 1 585 0
 1021              		.cfi_startproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 41


 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 0, uses_anonymous_args = 0
 1024              	.LVL89:
 1025 0000 70B5     		push	{r4, r5, r6, lr}
 1026              	.LCFI29:
 1027              		.cfi_def_cfa_offset 16
 1028              		.cfi_offset 4, -16
 1029              		.cfi_offset 5, -12
 1030              		.cfi_offset 6, -8
 1031              		.cfi_offset 14, -4
 1032 0002 82B0     		sub	sp, sp, #8
 1033              	.LCFI30:
 1034              		.cfi_def_cfa_offset 24
 1035 0004 0646     		mov	r6, r0
 1036 0006 0C46     		mov	r4, r1
 589:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1037              		.loc 1 589 0
 1038 0008 FFF7FEFF 		bl	vTaskSuspendAll
 1039              	.LVL90:
 596:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( xTimerListsWereSwitched == pdFALSE )
 1040              		.loc 1 596 0
 1041 000c 01A8     		add	r0, sp, #4
 1042 000e FFF7FEFF 		bl	prvSampleTimeNow
 1043              	.LVL91:
 597:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1044              		.loc 1 597 0
 1045 0012 019B     		ldr	r3, [sp, #4]
 1046 0014 23BB     		cbnz	r3, .L86
 1047 0016 0546     		mov	r5, r0
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1048              		.loc 1 600 0
 1049 0018 0CB9     		cbnz	r4, .L87
 600:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1050              		.loc 1 600 0 is_stmt 0 discriminator 1
 1051 001a B042     		cmp	r0, r6
 1052 001c 17D2     		bcs	.L92
 1053              	.L87:
 613:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1054              		.loc 1 613 0 is_stmt 1
 1055 001e 24B1     		cbz	r4, .L89
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1056              		.loc 1 617 0
 1057 0020 114B     		ldr	r3, .L93
 1058 0022 1B68     		ldr	r3, [r3]
 1059 0024 1B68     		ldr	r3, [r3]
 1060 0026 CBB9     		cbnz	r3, .L90
 1061 0028 0124     		movs	r4, #1
 1062              	.LVL92:
 1063              	.L89:
 620:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1064              		.loc 1 620 0
 1065 002a 2246     		mov	r2, r4
 1066 002c 711B     		subs	r1, r6, r5
 1067 002e 0F4B     		ldr	r3, .L93+4
 1068 0030 1868     		ldr	r0, [r3]
 1069              	.LVL93:
 1070 0032 FFF7FEFF 		bl	vQueueWaitForMessageRestricted
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 42


 1071              	.LVL94:
 622:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				{
 1072              		.loc 1 622 0
 1073 0036 FFF7FEFF 		bl	xTaskResumeAll
 1074              	.LVL95:
 1075 003a 98B9     		cbnz	r0, .L85
 628:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1076              		.loc 1 628 0
 1077 003c 0C4B     		ldr	r3, .L93+8
 1078 003e 4FF08052 		mov	r2, #268435456
 1079 0042 1A60     		str	r2, [r3]
 1080              		.syntax unified
 1081              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1082 0044 BFF34F8F 		dsb
 1083              	@ 0 "" 2
 1084              	@ 628 "Middlewares/Third_Party/FreeRTOS/Source/timers.c" 1
 1085 0048 BFF36F8F 		isb
 1086              	@ 0 "" 2
 1087              		.thumb
 1088              		.syntax unified
 1089 004c 0AE0     		b	.L85
 1090              	.LVL96:
 1091              	.L92:
 602:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				prvProcessExpiredTimer( xNextExpireTime, xTimeNow );
 1092              		.loc 1 602 0
 1093 004e FFF7FEFF 		bl	xTaskResumeAll
 1094              	.LVL97:
 603:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1095              		.loc 1 603 0
 1096 0052 2946     		mov	r1, r5
 1097 0054 3046     		mov	r0, r6
 1098 0056 FFF7FEFF 		bl	prvProcessExpiredTimer
 1099              	.LVL98:
 1100 005a 03E0     		b	.L85
 1101              	.LVL99:
 1102              	.L90:
 617:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 				}
 1103              		.loc 1 617 0
 1104 005c 0024     		movs	r4, #0
 1105              	.LVL100:
 1106 005e E4E7     		b	.L89
 1107              	.LVL101:
 1108              	.L86:
 638:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1109              		.loc 1 638 0
 1110 0060 FFF7FEFF 		bl	xTaskResumeAll
 1111              	.LVL102:
 1112              	.L85:
 641:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1113              		.loc 1 641 0
 1114 0064 02B0     		add	sp, sp, #8
 1115              	.LCFI31:
 1116              		.cfi_def_cfa_offset 16
 1117              		@ sp needed
 1118 0066 70BD     		pop	{r4, r5, r6, pc}
 1119              	.LVL103:
 1120              	.L94:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 43


 1121              		.align	2
 1122              	.L93:
 1123 0068 00000000 		.word	.LANCHOR1
 1124 006c 00000000 		.word	.LANCHOR2
 1125 0070 04ED00E0 		.word	-536810236
 1126              		.cfi_endproc
 1127              	.LFE18:
 1129              		.section	.text.prvProcessReceivedCommands,"ax",%progbits
 1130              		.align	1
 1131              		.syntax unified
 1132              		.thumb
 1133              		.thumb_func
 1134              		.fpu fpv4-sp-d16
 1136              	prvProcessReceivedCommands:
 1137              	.LFB22:
 735:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** DaemonTaskMessage_t xMessage;
 1138              		.loc 1 735 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 16
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 30B5     		push	{r4, r5, lr}
 1143              	.LCFI32:
 1144              		.cfi_def_cfa_offset 12
 1145              		.cfi_offset 4, -12
 1146              		.cfi_offset 5, -8
 1147              		.cfi_offset 14, -4
 1148 0002 87B0     		sub	sp, sp, #28
 1149              	.LCFI33:
 1150              		.cfi_def_cfa_offset 40
 1151              	.L97:
 741:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1152              		.loc 1 741 0
 1153 0004 0022     		movs	r2, #0
 1154 0006 03A9     		add	r1, sp, #12
 1155 0008 3B4B     		ldr	r3, .L115
 1156 000a 1868     		ldr	r0, [r3]
 1157 000c FFF7FEFF 		bl	xQueueReceive
 1158              	.LVL104:
 1159 0010 0028     		cmp	r0, #0
 1160 0012 6FD0     		beq	.L112
 767:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1161              		.loc 1 767 0
 1162 0014 039B     		ldr	r3, [sp, #12]
 1163 0016 002B     		cmp	r3, #0
 1164 0018 F4DB     		blt	.L97
 771:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1165              		.loc 1 771 0
 1166 001a 059C     		ldr	r4, [sp, #20]
 1167              	.LVL105:
 773:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1168              		.loc 1 773 0
 1169 001c 6369     		ldr	r3, [r4, #20]
 1170 001e 13B1     		cbz	r3, .L98
 776:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			}
 1171              		.loc 1 776 0
 1172 0020 201D     		adds	r0, r4, #4
 1173 0022 FFF7FEFF 		bl	uxListRemove
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 44


 1174              	.LVL106:
 1175              	.L98:
 791:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1176              		.loc 1 791 0
 1177 0026 02A8     		add	r0, sp, #8
 1178 0028 FFF7FEFF 		bl	prvSampleTimeNow
 1179              	.LVL107:
 793:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			{
 1180              		.loc 1 793 0
 1181 002c 039B     		ldr	r3, [sp, #12]
 1182 002e 092B     		cmp	r3, #9
 1183 0030 E8D8     		bhi	.L97
 1184 0032 DFE803F0 		tbb	[pc, r3]
 1185              	.L101:
 1186 0036 05       		.byte	(.L100-.L101)/2
 1187 0037 05       		.byte	(.L100-.L101)/2
 1188 0038 05       		.byte	(.L100-.L101)/2
 1189 0039 31       		.byte	(.L102-.L101)/2
 1190 003a 38       		.byte	(.L103-.L101)/2
 1191 003b 51       		.byte	(.L104-.L101)/2
 1192 003c 05       		.byte	(.L100-.L101)/2
 1193 003d 05       		.byte	(.L100-.L101)/2
 1194 003e 31       		.byte	(.L102-.L101)/2
 1195 003f 38       		.byte	(.L103-.L101)/2
 1196              		.p2align 1
 1197              	.L100:
 801:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer-
 1198              		.loc 1 801 0
 1199 0040 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1200 0044 43F00103 		orr	r3, r3, #1
 1201 0048 84F82830 		strb	r3, [r4, #40]
 802:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					{
 1202              		.loc 1 802 0
 1203 004c 0499     		ldr	r1, [sp, #16]
 1204 004e A569     		ldr	r5, [r4, #24]
 1205 0050 0B46     		mov	r3, r1
 1206 0052 0246     		mov	r2, r0
 1207 0054 2944     		add	r1, r1, r5
 1208 0056 2046     		mov	r0, r4
 1209              	.LVL108:
 1210 0058 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1211              	.LVL109:
 1212 005c 0028     		cmp	r0, #0
 1213 005e D1D0     		beq	.L97
 806:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						traceTIMER_EXPIRED( pxTimer );
 1214              		.loc 1 806 0
 1215 0060 236A     		ldr	r3, [r4, #32]
 1216 0062 2046     		mov	r0, r4
 1217 0064 9847     		blx	r3
 1218              	.LVL110:
 809:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1219              		.loc 1 809 0
 1220 0066 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1221 006a 13F0040F 		tst	r3, #4
 1222 006e C9D0     		beq	.L97
 811:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							configASSERT( xResult );
 1223              		.loc 1 811 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 45


 1224 0070 A269     		ldr	r2, [r4, #24]
 1225 0072 0021     		movs	r1, #0
 1226 0074 0091     		str	r1, [sp]
 1227 0076 0B46     		mov	r3, r1
 1228 0078 0498     		ldr	r0, [sp, #16]
 1229 007a 0244     		add	r2, r2, r0
 1230 007c 2046     		mov	r0, r4
 1231 007e FFF7FEFF 		bl	xTimerGenericCommand
 1232              	.LVL111:
 812:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 							( void ) xResult;
 1233              		.loc 1 812 0
 1234 0082 0028     		cmp	r0, #0
 1235 0084 BED1     		bne	.L97
 1236              	.LBB57:
 1237              	.LBB58:
 1238              		.loc 2 195 0
 1239              		.syntax unified
 1240              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1241 0086 4FF05003 			mov r3, #80												
 1242 008a 83F31188 		msr basepri, r3											
 1243 008e BFF36F8F 		isb														
 1244 0092 BFF34F8F 		dsb														
 1245              	
 1246              	@ 0 "" 2
 1247              	.LVL112:
 1248              		.thumb
 1249              		.syntax unified
 1250              	.L106:
 1251 0096 FEE7     		b	.L106
 1252              	.LVL113:
 1253              	.L102:
 1254              	.LBE58:
 1255              	.LBE57:
 829:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1256              		.loc 1 829 0
 1257 0098 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1258 009c 23F00103 		bic	r3, r3, #1
 1259 00a0 84F82830 		strb	r3, [r4, #40]
 830:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1260              		.loc 1 830 0
 1261 00a4 AEE7     		b	.L97
 1262              	.L103:
 834:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 1263              		.loc 1 834 0
 1264 00a6 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1265 00aa 43F00103 		orr	r3, r3, #1
 1266 00ae 84F82830 		strb	r3, [r4, #40]
 835:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 1267              		.loc 1 835 0
 1268 00b2 0499     		ldr	r1, [sp, #16]
 1269 00b4 A161     		str	r1, [r4, #24]
 836:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1270              		.loc 1 836 0
 1271 00b6 31B1     		cbz	r1, .L113
 844:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 					break;
 1272              		.loc 1 844 0
 1273 00b8 0346     		mov	r3, r0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 46


 1274 00ba 0246     		mov	r2, r0
 1275 00bc 0144     		add	r1, r1, r0
 1276 00be 2046     		mov	r0, r4
 1277              	.LVL114:
 1278 00c0 FFF7FEFF 		bl	prvInsertTimerInActiveList
 1279              	.LVL115:
 845:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1280              		.loc 1 845 0
 1281 00c4 9EE7     		b	.L97
 1282              	.LVL116:
 1283              	.L113:
 1284              	.LBB59:
 1285              	.LBB60:
 1286              		.loc 2 195 0
 1287              		.syntax unified
 1288              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1289 00c6 4FF05003 			mov r3, #80												
 1290 00ca 83F31188 		msr basepri, r3											
 1291 00ce BFF36F8F 		isb														
 1292 00d2 BFF34F8F 		dsb														
 1293              	
 1294              	@ 0 "" 2
 1295              	.LVL117:
 1296              		.thumb
 1297              		.syntax unified
 1298              	.L108:
 1299 00d6 FEE7     		b	.L108
 1300              	.L104:
 1301              	.LBE60:
 1302              	.LBE59:
 853:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						{
 1303              		.loc 1 853 0
 1304 00d8 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1305 00dc 13F0020F 		tst	r3, #2
 1306 00e0 04D0     		beq	.L114
 859:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1307              		.loc 1 859 0
 1308 00e2 23F00103 		bic	r3, r3, #1
 1309 00e6 84F82830 		strb	r3, [r4, #40]
 1310 00ea 8BE7     		b	.L97
 1311              	.L114:
 855:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 						}
 1312              		.loc 1 855 0
 1313 00ec 2046     		mov	r0, r4
 1314              	.LVL118:
 1315 00ee FFF7FEFF 		bl	vPortFree
 1316              	.LVL119:
 1317 00f2 87E7     		b	.L97
 1318              	.LVL120:
 1319              	.L112:
 879:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1320              		.loc 1 879 0
 1321 00f4 07B0     		add	sp, sp, #28
 1322              	.LCFI34:
 1323              		.cfi_def_cfa_offset 12
 1324              		@ sp needed
 1325 00f6 30BD     		pop	{r4, r5, pc}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 47


 1326              	.L116:
 1327              		.align	2
 1328              	.L115:
 1329 00f8 00000000 		.word	.LANCHOR2
 1330              		.cfi_endproc
 1331              	.LFE22:
 1333              		.section	.text.prvTimerTask,"ax",%progbits
 1334              		.align	1
 1335              		.syntax unified
 1336              		.thumb
 1337              		.thumb_func
 1338              		.fpu fpv4-sp-d16
 1340              	prvTimerTask:
 1341              	.LFB17:
 549:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** TickType_t xNextExpireTime;
 1342              		.loc 1 549 0
 1343              		.cfi_startproc
 1344              		@ args = 0, pretend = 0, frame = 8
 1345              		@ frame_needed = 0, uses_anonymous_args = 0
 1346              	.LVL121:
 1347 0000 00B5     		push	{lr}
 1348              	.LCFI35:
 1349              		.cfi_def_cfa_offset 4
 1350              		.cfi_offset 14, -4
 1351 0002 83B0     		sub	sp, sp, #12
 1352              	.LCFI36:
 1353              		.cfi_def_cfa_offset 16
 1354              	.LVL122:
 1355              	.L118:
 572:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1356              		.loc 1 572 0 discriminator 1
 1357 0004 01A8     		add	r0, sp, #4
 1358 0006 FFF7FEFF 		bl	prvGetNextExpireTime
 1359              	.LVL123:
 576:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1360              		.loc 1 576 0 discriminator 1
 1361 000a 0199     		ldr	r1, [sp, #4]
 1362 000c FFF7FEFF 		bl	prvProcessTimerOrBlockTask
 1363              	.LVL124:
 579:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1364              		.loc 1 579 0 discriminator 1
 1365 0010 FFF7FEFF 		bl	prvProcessReceivedCommands
 1366              	.LVL125:
 1367 0014 F6E7     		b	.L118
 1368              		.cfi_endproc
 1369              	.LFE17:
 1371              		.section	.text.xTimerGetTimerDaemonTaskHandle,"ax",%progbits
 1372              		.align	1
 1373              		.global	xTimerGetTimerDaemonTaskHandle
 1374              		.syntax unified
 1375              		.thumb
 1376              		.thumb_func
 1377              		.fpu fpv4-sp-d16
 1379              	xTimerGetTimerDaemonTaskHandle:
 1380              	.LFB10:
 425:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* If xTimerGetTimerDaemonTaskHandle() is called before the scheduler has been
 1381              		.loc 1 425 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 48


 1382              		.cfi_startproc
 1383              		@ args = 0, pretend = 0, frame = 0
 1384              		@ frame_needed = 0, uses_anonymous_args = 0
 1385              		@ link register save eliminated.
 428:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xTimerTaskHandle;
 1386              		.loc 1 428 0
 1387 0000 064B     		ldr	r3, .L124
 1388 0002 1868     		ldr	r0, [r3]
 1389 0004 00B1     		cbz	r0, .L123
 430:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1390              		.loc 1 430 0
 1391 0006 7047     		bx	lr
 1392              	.L123:
 1393              	.LBB61:
 1394              	.LBB62:
 1395              		.loc 2 195 0
 1396              		.syntax unified
 1397              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1398 0008 4FF05003 			mov r3, #80												
 1399 000c 83F31188 		msr basepri, r3											
 1400 0010 BFF36F8F 		isb														
 1401 0014 BFF34F8F 		dsb														
 1402              	
 1403              	@ 0 "" 2
 1404              	.LVL126:
 1405              		.thumb
 1406              		.syntax unified
 1407              	.L122:
 1408 0018 FEE7     		b	.L122
 1409              	.L125:
 1410 001a 00BF     		.align	2
 1411              	.L124:
 1412 001c 00000000 		.word	.LANCHOR7
 1413              	.LBE62:
 1414              	.LBE61:
 1415              		.cfi_endproc
 1416              	.LFE10:
 1418              		.section	.text.xTimerGetPeriod,"ax",%progbits
 1419              		.align	1
 1420              		.global	xTimerGetPeriod
 1421              		.syntax unified
 1422              		.thumb
 1423              		.thumb_func
 1424              		.fpu fpv4-sp-d16
 1426              	xTimerGetPeriod:
 1427              	.LFB11:
 434:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1428              		.loc 1 434 0
 1429              		.cfi_startproc
 1430              		@ args = 0, pretend = 0, frame = 0
 1431              		@ frame_needed = 0, uses_anonymous_args = 0
 1432              		@ link register save eliminated.
 1433              	.LVL127:
 437:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->xTimerPeriodInTicks;
 1434              		.loc 1 437 0
 1435 0000 08B1     		cbz	r0, .L129
 439:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 49


 1436              		.loc 1 439 0
 1437 0002 8069     		ldr	r0, [r0, #24]
 1438              	.LVL128:
 1439 0004 7047     		bx	lr
 1440              	.LVL129:
 1441              	.L129:
 1442              	.LBB63:
 1443              	.LBB64:
 1444              		.loc 2 195 0
 1445              		.syntax unified
 1446              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1447 0006 4FF05003 			mov r3, #80												
 1448 000a 83F31188 		msr basepri, r3											
 1449 000e BFF36F8F 		isb														
 1450 0012 BFF34F8F 		dsb														
 1451              	
 1452              	@ 0 "" 2
 1453              	.LVL130:
 1454              		.thumb
 1455              		.syntax unified
 1456              	.L128:
 1457 0016 FEE7     		b	.L128
 1458              	.LBE64:
 1459              	.LBE63:
 1460              		.cfi_endproc
 1461              	.LFE11:
 1463              		.section	.text.vTimerSetReloadMode,"ax",%progbits
 1464              		.align	1
 1465              		.global	vTimerSetReloadMode
 1466              		.syntax unified
 1467              		.thumb
 1468              		.thumb_func
 1469              		.fpu fpv4-sp-d16
 1471              	vTimerSetReloadMode:
 1472              	.LFB12:
 443:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1473              		.loc 1 443 0
 1474              		.cfi_startproc
 1475              		@ args = 0, pretend = 0, frame = 0
 1476              		@ frame_needed = 0, uses_anonymous_args = 0
 1477              	.LVL131:
 1478 0000 38B5     		push	{r3, r4, r5, lr}
 1479              	.LCFI37:
 1480              		.cfi_def_cfa_offset 16
 1481              		.cfi_offset 3, -16
 1482              		.cfi_offset 4, -12
 1483              		.cfi_offset 5, -8
 1484              		.cfi_offset 14, -4
 1485              	.LVL132:
 446:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1486              		.loc 1 446 0
 1487 0002 40B9     		cbnz	r0, .L131
 1488              	.LBB65:
 1489              	.LBB66:
 1490              		.loc 2 195 0
 1491              		.syntax unified
 1492              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 50


 1493 0004 4FF05003 			mov r3, #80												
 1494 0008 83F31188 		msr basepri, r3											
 1495 000c BFF36F8F 		isb														
 1496 0010 BFF34F8F 		dsb														
 1497              	
 1498              	@ 0 "" 2
 1499              	.LVL133:
 1500              		.thumb
 1501              		.syntax unified
 1502              	.L132:
 1503 0014 FEE7     		b	.L132
 1504              	.L131:
 1505 0016 0446     		mov	r4, r0
 1506 0018 0D46     		mov	r5, r1
 1507              	.LBE66:
 1508              	.LBE65:
 447:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1509              		.loc 1 447 0
 1510 001a FFF7FEFF 		bl	vPortEnterCritical
 1511              	.LVL134:
 449:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1512              		.loc 1 449 0
 1513 001e 35B9     		cbnz	r5, .L136
 455:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1514              		.loc 1 455 0
 1515 0020 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1516 0024 23F00403 		bic	r3, r3, #4
 1517 0028 84F82830 		strb	r3, [r4, #40]
 1518 002c 05E0     		b	.L134
 1519              	.L136:
 451:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1520              		.loc 1 451 0
 1521 002e 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1522 0032 43F00403 		orr	r3, r3, #4
 1523 0036 84F82830 		strb	r3, [r4, #40]
 1524              	.L134:
 458:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1525              		.loc 1 458 0
 1526 003a FFF7FEFF 		bl	vPortExitCritical
 1527              	.LVL135:
 459:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1528              		.loc 1 459 0
 1529 003e 38BD     		pop	{r3, r4, r5, pc}
 1530              		.cfi_endproc
 1531              	.LFE12:
 1533              		.section	.text.uxTimerGetReloadMode,"ax",%progbits
 1534              		.align	1
 1535              		.global	uxTimerGetReloadMode
 1536              		.syntax unified
 1537              		.thumb
 1538              		.thumb_func
 1539              		.fpu fpv4-sp-d16
 1541              	uxTimerGetReloadMode:
 1542              	.LFB13:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1543              		.loc 1 463 0
 1544              		.cfi_startproc
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 51


 1545              		@ args = 0, pretend = 0, frame = 0
 1546              		@ frame_needed = 0, uses_anonymous_args = 0
 1547              	.LVL136:
 467:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1548              		.loc 1 467 0
 1549 0000 40B9     		cbnz	r0, .L138
 1550              	.LBB67:
 1551              	.LBB68:
 1552              		.loc 2 195 0
 1553              		.syntax unified
 1554              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1555 0002 4FF05003 			mov r3, #80												
 1556 0006 83F31188 		msr basepri, r3											
 1557 000a BFF36F8F 		isb														
 1558 000e BFF34F8F 		dsb														
 1559              	
 1560              	@ 0 "" 2
 1561              	.LVL137:
 1562              		.thumb
 1563              		.syntax unified
 1564              	.L139:
 1565 0012 FEE7     		b	.L139
 1566              	.L138:
 1567              	.LBE68:
 1568              	.LBE67:
 463:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1569              		.loc 1 463 0
 1570 0014 10B5     		push	{r4, lr}
 1571              	.LCFI38:
 1572              		.cfi_def_cfa_offset 8
 1573              		.cfi_offset 4, -8
 1574              		.cfi_offset 14, -4
 1575 0016 0446     		mov	r4, r0
 468:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1576              		.loc 1 468 0
 1577 0018 FFF7FEFF 		bl	vPortEnterCritical
 1578              	.LVL138:
 470:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
 1579              		.loc 1 470 0
 1580 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1581 0020 13F0040F 		tst	r3, #4
 1582 0024 04D0     		beq	.L144
 478:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1583              		.loc 1 478 0
 1584 0026 0124     		movs	r4, #1
 1585              	.LVL139:
 1586              	.L140:
 481:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 1587              		.loc 1 481 0
 1588 0028 FFF7FEFF 		bl	vPortExitCritical
 1589              	.LVL140:
 484:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1590              		.loc 1 484 0
 1591 002c 2046     		mov	r0, r4
 1592 002e 10BD     		pop	{r4, pc}
 1593              	.LVL141:
 1594              	.L144:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 52


 473:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1595              		.loc 1 473 0
 1596 0030 0024     		movs	r4, #0
 1597              	.LVL142:
 1598 0032 F9E7     		b	.L140
 1599              		.cfi_endproc
 1600              	.LFE13:
 1602              		.section	.text.xTimerGetExpiryTime,"ax",%progbits
 1603              		.align	1
 1604              		.global	xTimerGetExpiryTime
 1605              		.syntax unified
 1606              		.thumb
 1607              		.thumb_func
 1608              		.fpu fpv4-sp-d16
 1610              	xTimerGetExpiryTime:
 1611              	.LFB14:
 488:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * pxTimer =  xTimer;
 1612              		.loc 1 488 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              		@ link register save eliminated.
 1617              	.LVL143:
 492:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	xReturn = listGET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ) );
 1618              		.loc 1 492 0
 1619 0000 08B1     		cbz	r0, .L148
 1620              	.LVL144:
 495:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1621              		.loc 1 495 0
 1622 0002 4068     		ldr	r0, [r0, #4]
 1623              	.LVL145:
 1624 0004 7047     		bx	lr
 1625              	.LVL146:
 1626              	.L148:
 1627              	.LBB69:
 1628              	.LBB70:
 1629              		.loc 2 195 0
 1630              		.syntax unified
 1631              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1632 0006 4FF05003 			mov r3, #80												
 1633 000a 83F31188 		msr basepri, r3											
 1634 000e BFF36F8F 		isb														
 1635 0012 BFF34F8F 		dsb														
 1636              	
 1637              	@ 0 "" 2
 1638              	.LVL147:
 1639              		.thumb
 1640              		.syntax unified
 1641              	.L147:
 1642 0016 FEE7     		b	.L147
 1643              	.LBE70:
 1644              	.LBE69:
 1645              		.cfi_endproc
 1646              	.LFE14:
 1648              		.section	.text.pcTimerGetName,"ax",%progbits
 1649              		.align	1
 1650              		.global	pcTimerGetName
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 53


 1651              		.syntax unified
 1652              		.thumb
 1653              		.thumb_func
 1654              		.fpu fpv4-sp-d16
 1656              	pcTimerGetName:
 1657              	.LFB15:
 499:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 1658              		.loc 1 499 0
 1659              		.cfi_startproc
 1660              		@ args = 0, pretend = 0, frame = 0
 1661              		@ frame_needed = 0, uses_anonymous_args = 0
 1662              		@ link register save eliminated.
 1663              	.LVL148:
 502:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pxTimer->pcTimerName;
 1664              		.loc 1 502 0
 1665 0000 08B1     		cbz	r0, .L152
 504:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 1666              		.loc 1 504 0
 1667 0002 0068     		ldr	r0, [r0]
 1668              	.LVL149:
 1669 0004 7047     		bx	lr
 1670              	.LVL150:
 1671              	.L152:
 1672              	.LBB71:
 1673              	.LBB72:
 1674              		.loc 2 195 0
 1675              		.syntax unified
 1676              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1677 0006 4FF05003 			mov r3, #80												
 1678 000a 83F31188 		msr basepri, r3											
 1679 000e BFF36F8F 		isb														
 1680 0012 BFF34F8F 		dsb														
 1681              	
 1682              	@ 0 "" 2
 1683              	.LVL151:
 1684              		.thumb
 1685              		.syntax unified
 1686              	.L151:
 1687 0016 FEE7     		b	.L151
 1688              	.LBE72:
 1689              	.LBE71:
 1690              		.cfi_endproc
 1691              	.LFE15:
 1693              		.section	.text.xTimerIsTimerActive,"ax",%progbits
 1694              		.align	1
 1695              		.global	xTimerIsTimerActive
 1696              		.syntax unified
 1697              		.thumb
 1698              		.thumb_func
 1699              		.fpu fpv4-sp-d16
 1701              	xTimerIsTimerActive:
 1702              	.LFB25:
 990:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
 991:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 992:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xTimerIsTimerActive( TimerHandle_t xTimer )
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1703              		.loc 1 993 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 54


 1704              		.cfi_startproc
 1705              		@ args = 0, pretend = 0, frame = 0
 1706              		@ frame_needed = 0, uses_anonymous_args = 0
 1707              	.LVL152:
 994:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 995:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t *pxTimer = xTimer;
 996:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 997:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1708              		.loc 1 997 0
 1709 0000 40B9     		cbnz	r0, .L154
 1710              	.LBB73:
 1711              	.LBB74:
 1712              		.loc 2 195 0
 1713              		.syntax unified
 1714              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1715 0002 4FF05003 			mov r3, #80												
 1716 0006 83F31188 		msr basepri, r3											
 1717 000a BFF36F8F 		isb														
 1718 000e BFF34F8F 		dsb														
 1719              	
 1720              	@ 0 "" 2
 1721              	.LVL153:
 1722              		.thumb
 1723              		.syntax unified
 1724              	.L155:
 1725 0012 FEE7     		b	.L155
 1726              	.L154:
 1727              	.LBE74:
 1728              	.LBE73:
 993:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** BaseType_t xReturn;
 1729              		.loc 1 993 0
 1730 0014 10B5     		push	{r4, lr}
 1731              	.LCFI39:
 1732              		.cfi_def_cfa_offset 8
 1733              		.cfi_offset 4, -8
 1734              		.cfi_offset 14, -4
 1735 0016 0446     		mov	r4, r0
 998:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
 999:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	/* Is the timer in the list of active timers? */
1000:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1736              		.loc 1 1000 0
 1737 0018 FFF7FEFF 		bl	vPortEnterCritical
 1738              	.LVL154:
1001:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1002:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		if( ( pxTimer->ucStatus & tmrSTATUS_IS_ACTIVE ) == 0 )
 1739              		.loc 1 1002 0
 1740 001c 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 1741 0020 13F0010F 		tst	r3, #1
 1742 0024 04D0     		beq	.L160
1003:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdFALSE;
1005:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1006:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		else
1007:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		{
1008:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 			xReturn = pdTRUE;
 1743              		.loc 1 1008 0
 1744 0026 0124     		movs	r4, #1
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 55


 1745              	.LVL155:
 1746              	.L156:
1009:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
1010:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1011:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1747              		.loc 1 1011 0
 1748 0028 FFF7FEFF 		bl	vPortExitCritical
 1749              	.LVL156:
1012:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1013:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return xReturn;
1014:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** } /*lint !e818 Can't be pointer to const due to the typedef. */
 1750              		.loc 1 1014 0
 1751 002c 2046     		mov	r0, r4
 1752 002e 10BD     		pop	{r4, pc}
 1753              	.LVL157:
 1754              	.L160:
1004:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		}
 1755              		.loc 1 1004 0
 1756 0030 0024     		movs	r4, #0
 1757              	.LVL158:
 1758 0032 F9E7     		b	.L156
 1759              		.cfi_endproc
 1760              	.LFE25:
 1762              		.section	.text.pvTimerGetTimerID,"ax",%progbits
 1763              		.align	1
 1764              		.global	pvTimerGetTimerID
 1765              		.syntax unified
 1766              		.thumb
 1767              		.thumb_func
 1768              		.fpu fpv4-sp-d16
 1770              	pvTimerGetTimerID:
 1771              	.LFB26:
1015:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1016:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1017:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvTimerGetTimerID( const TimerHandle_t xTimer )
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1772              		.loc 1 1018 0
 1773              		.cfi_startproc
 1774              		@ args = 0, pretend = 0, frame = 0
 1775              		@ frame_needed = 0, uses_anonymous_args = 0
 1776              	.LVL159:
1019:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1020:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void *pvReturn;
1021:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1022:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1777              		.loc 1 1022 0
 1778 0000 40B9     		cbnz	r0, .L162
 1779              	.LBB75:
 1780              	.LBB76:
 1781              		.loc 2 195 0
 1782              		.syntax unified
 1783              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1784 0002 4FF05003 			mov r3, #80												
 1785 0006 83F31188 		msr basepri, r3											
 1786 000a BFF36F8F 		isb														
 1787 000e BFF34F8F 		dsb														
 1788              	
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 56


 1789              	@ 0 "" 2
 1790              	.LVL160:
 1791              		.thumb
 1792              		.syntax unified
 1793              	.L163:
 1794 0012 FEE7     		b	.L163
 1795              	.L162:
 1796              	.LBE76:
 1797              	.LBE75:
1018:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
 1798              		.loc 1 1018 0
 1799 0014 10B5     		push	{r4, lr}
 1800              	.LCFI40:
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 4, -8
 1803              		.cfi_offset 14, -4
 1804 0016 0446     		mov	r4, r0
1023:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1024:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1805              		.loc 1 1024 0
 1806 0018 FFF7FEFF 		bl	vPortEnterCritical
 1807              	.LVL161:
1025:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1026:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pvReturn = pxTimer->pvTimerID;
 1808              		.loc 1 1026 0
 1809 001c E469     		ldr	r4, [r4, #28]
 1810              	.LVL162:
1027:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1028:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1811              		.loc 1 1028 0
 1812 001e FFF7FEFF 		bl	vPortExitCritical
 1813              	.LVL163:
1029:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1030:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	return pvReturn;
1031:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1814              		.loc 1 1031 0
 1815 0022 2046     		mov	r0, r4
 1816 0024 10BD     		pop	{r4, pc}
 1817              		.cfi_endproc
 1818              	.LFE26:
 1820              		.section	.text.vTimerSetTimerID,"ax",%progbits
 1821              		.align	1
 1822              		.global	vTimerSetTimerID
 1823              		.syntax unified
 1824              		.thumb
 1825              		.thumb_func
 1826              		.fpu fpv4-sp-d16
 1828              	vTimerSetTimerID:
 1829              	.LFB27:
1032:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1033:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1034:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** void vTimerSetTimerID( TimerHandle_t xTimer, void *pvNewID )
1035:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** {
 1830              		.loc 1 1035 0
 1831              		.cfi_startproc
 1832              		@ args = 0, pretend = 0, frame = 0
 1833              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 57


 1834              	.LVL164:
 1835 0000 38B5     		push	{r3, r4, r5, lr}
 1836              	.LCFI41:
 1837              		.cfi_def_cfa_offset 16
 1838              		.cfi_offset 3, -16
 1839              		.cfi_offset 4, -12
 1840              		.cfi_offset 5, -8
 1841              		.cfi_offset 14, -4
 1842              	.LVL165:
1036:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** Timer_t * const pxTimer = xTimer;
1037:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1038:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	configASSERT( xTimer );
 1843              		.loc 1 1038 0
 1844 0002 40B9     		cbnz	r0, .L167
 1845              	.LBB77:
 1846              	.LBB78:
 1847              		.loc 2 195 0
 1848              		.syntax unified
 1849              	@ 195 "Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h" 1
 1850 0004 4FF05003 			mov r3, #80												
 1851 0008 83F31188 		msr basepri, r3											
 1852 000c BFF36F8F 		isb														
 1853 0010 BFF34F8F 		dsb														
 1854              	
 1855              	@ 0 "" 2
 1856              	.LVL166:
 1857              		.thumb
 1858              		.syntax unified
 1859              	.L168:
 1860 0014 FEE7     		b	.L168
 1861              	.L167:
 1862 0016 0446     		mov	r4, r0
 1863 0018 0D46     		mov	r5, r1
 1864              	.LBE78:
 1865              	.LBE77:
1039:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1040:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskENTER_CRITICAL();
 1866              		.loc 1 1040 0
 1867 001a FFF7FEFF 		bl	vPortEnterCritical
 1868              	.LVL167:
1041:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1042:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		pxTimer->pvTimerID = pvNewID;
 1869              		.loc 1 1042 0
 1870 001e E561     		str	r5, [r4, #28]
1043:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1044:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	taskEXIT_CRITICAL();
 1871              		.loc 1 1044 0
 1872 0020 FFF7FEFF 		bl	vPortExitCritical
 1873              	.LVL168:
1045:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** }
 1874              		.loc 1 1045 0
 1875 0024 38BD     		pop	{r3, r4, r5, pc}
 1876              		.cfi_endproc
 1877              	.LFE27:
 1879              		.section	.text.uxTimerGetTimerNumber,"ax",%progbits
 1880              		.align	1
 1881              		.global	uxTimerGetTimerNumber
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 58


 1882              		.syntax unified
 1883              		.thumb
 1884              		.thumb_func
 1885              		.fpu fpv4-sp-d16
 1887              	uxTimerGetTimerNumber:
 1888              	.LFB28:
1046:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1047:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1048:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1049:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1050:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCallFromISR( PendedFunction_t xFunctionToPend, void *pvParameter1, ui
1051:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1052:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1053:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1054:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1055:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1056:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1057:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK_FROM_ISR;
1058:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1059:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1060:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1061:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1062:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
1063:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1064:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL_FROM_ISR( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1065:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1066:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1067:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
1068:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1069:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1070:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1071:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1072:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if( INCLUDE_xTimerPendFunctionCall == 1 )
1073:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1074:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xTimerPendFunctionCall( PendedFunction_t xFunctionToPend, void *pvParameter1, uint32_t 
1075:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
1076:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	DaemonTaskMessage_t xMessage;
1077:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	BaseType_t xReturn;
1078:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1079:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* This function can only be called after a timer has been created or
1080:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		after the scheduler has been started because, until then, the timer
1081:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		queue does not exist. */
1082:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		configASSERT( xTimerQueue );
1083:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1084:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		/* Complete the message with the function parameters and post it to the
1085:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		daemon task. */
1086:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.xMessageID = tmrCOMMAND_EXECUTE_CALLBACK;
1087:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pxCallbackFunction = xFunctionToPend;
1088:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.pvParameter1 = pvParameter1;
1089:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xMessage.u.xCallbackParameters.ulParameter2 = ulParameter2;
1090:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1091:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
1092:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1093:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		tracePEND_FUNC_CALL( xFunctionToPend, pvParameter1, ulParameter2, xReturn );
1094:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1095:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return xReturn;
1096:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 59


1097:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1098:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* INCLUDE_xTimerPendFunctionCall */
1099:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1100:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1101:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1102:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1103:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	UBaseType_t uxTimerGetTimerNumber( TimerHandle_t xTimer )
1104:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1889              		.loc 1 1104 0
 1890              		.cfi_startproc
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 0, uses_anonymous_args = 0
 1893              		@ link register save eliminated.
 1894              	.LVL169:
1105:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		return ( ( Timer_t * ) xTimer )->uxTimerNumber;
1106:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1895              		.loc 1 1106 0
 1896 0000 406A     		ldr	r0, [r0, #36]
 1897              	.LVL170:
 1898 0002 7047     		bx	lr
 1899              		.cfi_endproc
 1900              	.LFE28:
 1902              		.section	.text.vTimerSetTimerNumber,"ax",%progbits
 1903              		.align	1
 1904              		.global	vTimerSetTimerNumber
 1905              		.syntax unified
 1906              		.thumb
 1907              		.thumb_func
 1908              		.fpu fpv4-sp-d16
 1910              	vTimerSetTimerNumber:
 1911              	.LFB29:
1107:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1108:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #endif /* configUSE_TRACE_FACILITY */
1109:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** /*-----------------------------------------------------------*/
1110:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1111:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** #if ( configUSE_TRACE_FACILITY == 1 )
1112:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 
1113:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	void vTimerSetTimerNumber( TimerHandle_t xTimer, UBaseType_t uxTimerNumber )
1114:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	{
 1912              		.loc 1 1114 0
 1913              		.cfi_startproc
 1914              		@ args = 0, pretend = 0, frame = 0
 1915              		@ frame_needed = 0, uses_anonymous_args = 0
 1916              		@ link register save eliminated.
 1917              	.LVL171:
1115:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 		( ( Timer_t * ) xTimer )->uxTimerNumber = uxTimerNumber;
 1918              		.loc 1 1115 0
 1919 0000 4162     		str	r1, [r0, #36]
1116:Middlewares/Third_Party/FreeRTOS/Source/timers.c **** 	}
 1920              		.loc 1 1116 0
 1921 0002 7047     		bx	lr
 1922              		.cfi_endproc
 1923              	.LFE29:
 1925              		.section	.bss.pxCurrentTimerList,"aw",%nobits
 1926              		.align	2
 1927              		.set	.LANCHOR0,. + 0
 1930              	pxCurrentTimerList:
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 60


 1931 0000 00000000 		.space	4
 1932              		.section	.bss.pxOverflowTimerList,"aw",%nobits
 1933              		.align	2
 1934              		.set	.LANCHOR1,. + 0
 1937              	pxOverflowTimerList:
 1938 0000 00000000 		.space	4
 1939              		.section	.bss.ucStaticTimerQueueStorage.6847,"aw",%nobits
 1940              		.align	2
 1941              		.set	.LANCHOR6,. + 0
 1944              	ucStaticTimerQueueStorage.6847:
 1945 0000 00000000 		.space	120
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1945      00000000 
 1946              		.section	.bss.xActiveTimerList1,"aw",%nobits
 1947              		.align	2
 1948              		.set	.LANCHOR3,. + 0
 1951              	xActiveTimerList1:
 1952 0000 00000000 		.space	20
 1952      00000000 
 1952      00000000 
 1952      00000000 
 1952      00000000 
 1953              		.section	.bss.xActiveTimerList2,"aw",%nobits
 1954              		.align	2
 1955              		.set	.LANCHOR4,. + 0
 1958              	xActiveTimerList2:
 1959 0000 00000000 		.space	20
 1959      00000000 
 1959      00000000 
 1959      00000000 
 1959      00000000 
 1960              		.section	.bss.xLastTime.6798,"aw",%nobits
 1961              		.align	2
 1962              		.set	.LANCHOR8,. + 0
 1965              	xLastTime.6798:
 1966 0000 00000000 		.space	4
 1967              		.section	.bss.xStaticTimerQueue.6846,"aw",%nobits
 1968              		.align	2
 1969              		.set	.LANCHOR5,. + 0
 1972              	xStaticTimerQueue.6846:
 1973 0000 00000000 		.space	80
 1973      00000000 
 1973      00000000 
 1973      00000000 
 1973      00000000 
 1974              		.section	.bss.xTimerQueue,"aw",%nobits
 1975              		.align	2
 1976              		.set	.LANCHOR2,. + 0
 1979              	xTimerQueue:
 1980 0000 00000000 		.space	4
 1981              		.section	.bss.xTimerTaskHandle,"aw",%nobits
 1982              		.align	2
 1983              		.set	.LANCHOR7,. + 0
 1986              	xTimerTaskHandle:
 1987 0000 00000000 		.space	4
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 61


 1988              		.section	.rodata.prvCheckForValidListAndQueue.str1.4,"aMS",%progbits,1
 1989              		.align	2
 1990              	.LC0:
 1991 0000 546D7251 		.ascii	"TmrQ\000"
 1991      00
 1992              		.section	.rodata.xTimerCreateTimerTask.str1.4,"aMS",%progbits,1
 1993              		.align	2
 1994              	.LC1:
 1995 0000 546D7220 		.ascii	"Tmr Svc\000"
 1995      53766300 
 1996              		.text
 1997              	.Letext0:
 1998              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\lib\\gcc\\arm-none-eab
 1999              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2000              		.file 5 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2001              		.file 6 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2002              		.file 7 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2003              		.file 8 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2004              		.file 9 "c:\\program files (x86)\\gnu tools arm embedded\\7 2018-q2-update\\arm-none-eabi\\include
 2005              		.file 10 "Core/Inc/FreeRTOSConfig.h"
 2006              		.file 11 "Middlewares/Third_Party/FreeRTOS/Source/include/projdefs.h"
 2007              		.file 12 "Middlewares/Third_Party/FreeRTOS/Source/include/FreeRTOS.h"
 2008              		.file 13 "Middlewares/Third_Party/FreeRTOS/Source/include/list.h"
 2009              		.file 14 "Middlewares/Third_Party/FreeRTOS/Source/include/task.h"
 2010              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/include/queue.h"
 2011              		.file 16 "Middlewares/Third_Party/FreeRTOS/Source/include/timers.h"
 2012              		.file 17 "Middlewares/Third_Party/FreeRTOS/Source/include/portable.h"
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 timers.c
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:18     .text.prvGetNextExpireTime:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:24     .text.prvGetNextExpireTime:00000000 prvGetNextExpireTime
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:63     .text.prvGetNextExpireTime:0000001c $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:68     .text.prvInsertTimerInActiveList:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:74     .text.prvInsertTimerInActiveList:00000000 prvInsertTimerInActiveList
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:152    .text.prvInsertTimerInActiveList:00000040 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:158    .text.prvCheckForValidListAndQueue:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:164    .text.prvCheckForValidListAndQueue:00000000 prvCheckForValidListAndQueue
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:240    .text.prvCheckForValidListAndQueue:00000050 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:252    .text.prvInitialiseNewTimer:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:258    .text.prvInitialiseNewTimer:00000000 prvInitialiseNewTimer
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:334    .text.xTimerCreateTimerTask:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:341    .text.xTimerCreateTimerTask:00000000 xTimerCreateTimerTask
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:423    .text.xTimerCreateTimerTask:00000054 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1340   .text.prvTimerTask:00000000 prvTimerTask
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:433    .text.xTimerCreate:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:440    .text.xTimerCreate:00000000 xTimerCreate
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:497    .text.xTimerCreateStatic:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:504    .text.xTimerCreateStatic:00000000 xTimerCreateStatic
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:594    .text.xTimerGenericCommand:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:601    .text.xTimerGenericCommand:00000000 xTimerGenericCommand
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:717    .text.xTimerGenericCommand:00000068 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:722    .text.prvSwitchTimerLists:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:728    .text.prvSwitchTimerLists:00000000 prvSwitchTimerLists
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:840    .text.prvSwitchTimerLists:00000074 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:846    .text.prvSampleTimeNow:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:852    .text.prvSampleTimeNow:00000000 prvSampleTimeNow
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:900    .text.prvSampleTimeNow:00000028 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:905    .text.prvProcessExpiredTimer:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:911    .text.prvProcessExpiredTimer:00000000 prvProcessExpiredTimer
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1005   .text.prvProcessExpiredTimer:00000068 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1012   .text.prvProcessTimerOrBlockTask:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1018   .text.prvProcessTimerOrBlockTask:00000000 prvProcessTimerOrBlockTask
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1123   .text.prvProcessTimerOrBlockTask:00000068 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1130   .text.prvProcessReceivedCommands:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1136   .text.prvProcessReceivedCommands:00000000 prvProcessReceivedCommands
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1186   .text.prvProcessReceivedCommands:00000036 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1196   .text.prvProcessReceivedCommands:00000040 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1329   .text.prvProcessReceivedCommands:000000f8 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1334   .text.prvTimerTask:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1372   .text.xTimerGetTimerDaemonTaskHandle:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1379   .text.xTimerGetTimerDaemonTaskHandle:00000000 xTimerGetTimerDaemonTaskHandle
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1412   .text.xTimerGetTimerDaemonTaskHandle:0000001c $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1419   .text.xTimerGetPeriod:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1426   .text.xTimerGetPeriod:00000000 xTimerGetPeriod
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1464   .text.vTimerSetReloadMode:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1471   .text.vTimerSetReloadMode:00000000 vTimerSetReloadMode
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1534   .text.uxTimerGetReloadMode:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1541   .text.uxTimerGetReloadMode:00000000 uxTimerGetReloadMode
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1603   .text.xTimerGetExpiryTime:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1610   .text.xTimerGetExpiryTime:00000000 xTimerGetExpiryTime
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1649   .text.pcTimerGetName:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1656   .text.pcTimerGetName:00000000 pcTimerGetName
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1694   .text.xTimerIsTimerActive:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1701   .text.xTimerIsTimerActive:00000000 xTimerIsTimerActive
ARM GAS  C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s 			page 63


C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1763   .text.pvTimerGetTimerID:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1770   .text.pvTimerGetTimerID:00000000 pvTimerGetTimerID
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1821   .text.vTimerSetTimerID:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1828   .text.vTimerSetTimerID:00000000 vTimerSetTimerID
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1880   .text.uxTimerGetTimerNumber:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1887   .text.uxTimerGetTimerNumber:00000000 uxTimerGetTimerNumber
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1903   .text.vTimerSetTimerNumber:00000000 $t
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1910   .text.vTimerSetTimerNumber:00000000 vTimerSetTimerNumber
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1926   .bss.pxCurrentTimerList:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1930   .bss.pxCurrentTimerList:00000000 pxCurrentTimerList
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1933   .bss.pxOverflowTimerList:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1937   .bss.pxOverflowTimerList:00000000 pxOverflowTimerList
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1940   .bss.ucStaticTimerQueueStorage.6847:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1944   .bss.ucStaticTimerQueueStorage.6847:00000000 ucStaticTimerQueueStorage.6847
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1947   .bss.xActiveTimerList1:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1951   .bss.xActiveTimerList1:00000000 xActiveTimerList1
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1954   .bss.xActiveTimerList2:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1958   .bss.xActiveTimerList2:00000000 xActiveTimerList2
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1961   .bss.xLastTime.6798:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1965   .bss.xLastTime.6798:00000000 xLastTime.6798
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1968   .bss.xStaticTimerQueue.6846:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1972   .bss.xStaticTimerQueue.6846:00000000 xStaticTimerQueue.6846
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1975   .bss.xTimerQueue:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1979   .bss.xTimerQueue:00000000 xTimerQueue
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1982   .bss.xTimerTaskHandle:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1986   .bss.xTimerTaskHandle:00000000 xTimerTaskHandle
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1989   .rodata.prvCheckForValidListAndQueue.str1.4:00000000 $d
C:\Users\82057\AppData\Local\Temp\ccCB5cnA.s:1993   .rodata.xTimerCreateTimerTask.str1.4:00000000 $d

UNDEFINED SYMBOLS
vListInsert
vPortEnterCritical
vPortExitCritical
vListInitialise
xQueueGenericCreateStatic
vQueueAddToRegistry
vListInitialiseItem
vApplicationGetTimerTaskMemory
xTaskCreateStatic
pvPortMalloc
xTaskGetSchedulerState
xQueueGenericSend
xQueueGenericSendFromISR
uxListRemove
xTaskGetTickCount
vTaskSuspendAll
vQueueWaitForMessageRestricted
xTaskResumeAll
xQueueReceive
vPortFree
